MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; ** PLANTILLA.ASM ************************************************
                      00002 ; **               Francisco Javier Merchán Macías               **
                      00003 ; **                     Fatima Romero Romero                    **
                      00004 ; **                     Esmeralda Rubio Parra                   **
                      00005 ; **                       I.T.T.Telemática                      **
                      00006 ; *****************************************************************
                      00007 ; ** Descripción práctica:                                       **
                      00008 ; **                                                 .           **
                      00009 ; **   Emisor y receptor.                                        **
                      00010 ; **                                                             **
                      00011 ; **                                                             **
                      00012 ; **                                                             **
                      00013 ; *****************************************************************
                      00014 
                      00015 ; ZONA DE DATOS **********************************************************************
                      00016 
2007   3FF1           00017         __CONFIG _CP_OFF& _WDT_OFF&_PWRTE_ON&_XT_OSC    ; Configuración para el grabador
                      00018 
                      00019         LIST P=16F84A                                   ; Indica el tipo de mC utilizado.
                      00020         INCLUDE <P16F84A.INC>                   ; Incluye las definiciones de registros y constantes aso
                            ciadas a este mC.
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00021 
                      00022         CBLOCK 0x0C                     ;La zona de memoria de usuario comienza en esta dirección de mem
                            oria RAM de datos
  0000000C            00023         ENVIO
  0000000D            00024         ContadorEnvio
  0000000E            00025         ContadorEmisor          ;Contador para ENVIO.INC
  0000000F            00026         ContadorReceptor        ;Contador para RECIBIR.INC
  00000010            00027         DatosRecibido           ;Para guardar el dato en RECIBIR.INC
  00000011            00028         TablaLongitud
  00000012            00029         TablaPosicion
                      00030         ENDC
                      00031 
                      00032 ;   CONSTANTES ****************************************************
                      00033         #DEFINE Pulsador                        PORTA,4
                      00034         #DEFINE PuertaEnviar            PORTB,1
                      00035         #DEFINE PuertaRecibir           PORTB,0
                      00036 ;       #DEFINE SalidaComprobar         PORTB,3
                      00037 ;       #DEFINE EntradaComprobar        PORTB,2
                      00038 
                      00039 ;ZONA DE CODIGO **********************************************************************
0000                  00040         ORG 0
                      00041 
0000                  00042 Inicio
                      00043 ;   CONFIGURACIÓN DE ENTRADAS Y SALIDAS ***************************
0000   1683           00044         bsf             STATUS, RP0                     ;Acceso al banco 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0001   1086           00045         bcf             TRISB,1         ;RB1 como salida. (PUERTA DE ENVIO DE DATOS)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0002   1406           00046         bsf             TRISB,0         ;RB0 como entrada. (PUERTA DE RECEPCION DE DATOS)
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00047 ;       bcf             TRISB,3         ;RB3 como salida. COMPROBACIONES.
                      00048 ;       bsf             TRISB,2         ;RB2 como entrada. COMPROBACIONES.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0003   1585           00049         bsf             TRISA,3         ;RA3 como entrada (INTERRUPTOR)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0004   1605           00050         bsf             TRISA,4         ;RA3 como entrada (INTERRUPTOR)
0005   1283           00051         bcf     STATUS, RP0                     ;Acceso al banco 0
                      00052 
                      00053 ;Aquí empieza el programa en sí...
0006                  00054 Principal
0006   200C           00055         call    Presentacion
0007   21FD           00056         call    Elegir
0008                  00057 Dormir
0008   21C1           00058         call    Retardo_5s
0009   22BF           00059         call    LucesInicio
000A                  00060 DormirFin
000A   0063           00061         sleep
000B   280A           00062         goto    DormirFin
                      00063 
                      00064 ;-----------INICIO Instrucciones para el inicio y presentacion---------------------------------------
000C                  00065 Presentacion
000C   20E2           00066         call    LCD_Inicializa
000D   211E           00067         call    LCD_Borra
000E   3018           00068         movlw   MensajeBienvenida
000F   2166           00069         call    LCD_Mensaje
0010   21C3           00070         call    Retardo_2s
0011   3040           00071         movlw   0x40
0012   2114           00072         call    LCD_PosicionLinea1
0013   3025           00073         movlw   MensajeElige
0014   2166           00074         call    LCD_Mensaje
0015   21C3           00075         call    Retardo_2s
0016   0008           00076         return
                      00077 ;-----------FIN Instrucciones para el inicio y presentacion---------------------------------------
                      00078 
                      00079 ; Mensajes ----------------------------------------
0017                  00080 Mensajes
0017   0782           00081         addwf   PCL,F
0018                  00082 MensajeBienvenida                               ;En subrutina Presentacion de PLANTILLA.ASM
0018   3450 3472 3461 00083         DT "Practica SED", 0x00
       3463 3474 3469 
       3463 3461 3420 
       3453 3445 3444 
       3400 
0025                  00084 MensajeElige                                    ;En subrutina Presentacion de PLANTILLA.ASM
0025   3445 346C 3469 00085         DT "Elige TX o RX:", 0x00
       3467 3465 3420 
       3454 3458 3420 
       346F 3420 3452 
       3458 343A 3400 
0034                  00086 Mensaje0                                                ;En subrutina de ELIGIR.INC
0034   3430 343D 3452 00087         DT "0=Receptor", 0x00
       3465 3463 3465 
       3470 3474 346F 
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3472 3400 
003F                  00088 Mensaje1                                                ;En subrutina de ELIGIR.INC
003F   3431 343D 3445 00089         DT "1=Emisor", 0x00
       346D 3469 3473 
       346F 3472 3400 
0048                  00090 MensajeDatCargado                               ;En subrutina de CARGANDO.INC
0048   3444 3461 3474 00091         DT "Datos Cargados", 0x00
       346F 3473 3420 
       3443 3461 3472 
       3467 3461 3464 
       346F 3473 3400 
0057                  00092 MensajeEmitiendo                                ;En subrutina de EMITIR.INC
0057   3445 344D 3449 00093         DT "EMITIENDO RB1", 0x00
       3454 3449 3445 
       344E 3444 344F 
       3420 3452 3442 
       3431 3400 
0065                  00094 MensajeRecibiendo                               ;En subrutina de RECIBIR.INC
0065   3452 3445 3443 00095         DT "RECIBIENDO RB0", 0x00
       3449 3442 3449 
       3445 344E 3444 
       344F 3420 3452 
       3442 3430 3400 
0074                  00096 MensDatosEnv                                    ;En subrutina de EMITIR.INC
0074   3444 3461 3474 00097         DT "Datos ENVIADOS", 0x00
       346F 3473 3420 
       3445 344E 3456 
       3449 3441 3444 
       344F 3453 3400 
0083                  00098 RecCorrect                                              ;En subrutina de RECIBIR.INC
0083   3452 3445 3443 00099         DT "RECEPCION OK", 0x00
       3445 3450 3443 
       3449 344F 344E 
       3420 344F 344B 
       3400 
0090                  00100 MensajeBitStart                                 ;En subrutina de RECIBIR.INC
0090   3442 3469 3474 00101         DT "Bit Start", 0x00
       3420 3453 3474 
       3461 3472 3474 
       3400 
009A                  00102 MensajeBStop                                    ;En subrutina de RECIBIR.INC
009A   3442 3469 3474 00103         DT "Bit Stop ", 0x00
       3420 3453 3474 
       346F 3470 3420 
       3400 
00A4                  00104 MensajeErrorHayDosEmisores              ;En subrutina de ELIGIR.INC
00A4   3445 3472 3472 00105         DT "Error Hay 2 TX ", 0x00
       346F 3472 3420 
       3448 3461 3479 
       3420 3432 3420 
       3454 3458 3420 
       3400 
00B4                  00106 MensajeErrorHayDosReceptores    ;En subrutina de ELIGIR.INC
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B4   3445 3472 3472 00107         DT "Error Hay 2 RX ", 0x00
       346F 3472 3420 
       3448 3461 3479 
       3420 3432 3420 
       3452 3458 3420 
       3400 
00C4                  00108 MensajeEmisorEncontrado                 ;En subrutina de ELIGIR.INC
00C4   3445 346D 3469 00109         DT "Emisor Found!", 0x00
       3473 346F 3472 
       3420 3446 346F 
       3475 346E 3464 
       3421 3400 
00D2                  00110 MensajeReceptorEncontrado               ;En subrutina de ELIGIR.INC
00D2   3452 3465 3463 00111         DT "Receptor Found!", 0x00
       3465 3470 3474 
       346F 3472 3420 
       3446 346F 3475 
       346E 3464 3421 
       3400 
                      00112 
                      00113         INCLUDE <LCD_4BIT.INC>
                      00001 ;       ===================================================================
                      00002 ;
                      00003 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00004 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00005 ;
                      00006 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00007 ; conexiones son:
                      00008 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00009 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00010 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00011 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00012 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00013 ;
                      00014 ; Se utilizan las subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00015 ;
                      00016 ; ZONA DE DATOS *********************************************************************
                      00017 
                      00018         CBLOCK
  00000013            00019         LCD_Dato
  00000014            00020         LCD_GuardaDato
  00000015            00021         LCD_GuardaTRISB
  00000016            00022         LCD_Auxiliar1
  00000017            00023         LCD_Auxiliar2
                      00024         ENDC
                      00025 
  00000010            00026 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00027 
                      00028 #DEFINE  LCD_PinRS      PORTA,0
                      00029 #DEFINE  LCD_PinRW      PORTA,1
                      00030 #DEFINE  LCD_PinEnable  PORTA,2
                      00031 #DEFINE  LCD_BusDatos   PORTB
                      00032 
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00033 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00034 ;
                      00035 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
                      00036 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
                      00037 ; configuración inicial hay que hacerla como sigue:
                      00038 ;
00E2                  00039 LCD_Inicializa
00E2   1683           00040         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
00E3   1005           00041         bcf     LCD_PinRS               ; R/W y E.
00E4   1105           00042         bcf     LCD_PinEnable
00E5   1085           00043         bcf     LCD_PinRW
00E6   1283           00044         bcf     STATUS,RP0
00E7   1085           00045         bcf     LCD_PinRW               ; En caso de que esté conectado le indica
                      00046                                         ; que se va a escribir en el LCD.
00E8   1105           00047         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD poniendo E=0.
00E9   1005           00048         bcf     LCD_PinRS               ; Activa el Modo Comando poniendo RS=0.
00EA   21AB           00049         call    Retardo_20ms
00EB   3030           00050         movlw   b'00110000'     
00EC   20FA           00051         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
00ED   21AF           00052         call    Retardo_5ms     
00EE   3030           00053         movlw   b'00110000'     
00EF   20FA           00054         call    LCD_EscribeLCD
00F0   2198           00055         call    Retardo_200micros
00F1   3030           00056         movlw   b'00110000'     
00F2   20FA           00057         call    LCD_EscribeLCD
00F3   3020           00058         movlw   b'00100000'             ; Interface de 4 bits.
00F4   20FA           00059         call    LCD_EscribeLCD
                      00060 
                      00061 ; Ahora configura el resto de los parámetros: 
                      00062 
00F5   2120           00063         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
00F6   211E           00064         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
00F7   211C           00065         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
00F8   210E           00066         call    LCD_CursorIncr          ; Cursor en modo incrementar.
00F9   0008           00067         return
                      00068 
                      00069 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
                      00070 ;
                      00071 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el pin
                      00072 ; Enable del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B que
                      00073 ; no son utilizadas para el LCD (pines RB3:RB0), primero se lee estas líneas y después se
                      00074 ; vuelve a enviar este dato sin cambiarlo.
                      00075 
00FA                  00076 LCD_EscribeLCD
00FA   39F0           00077         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
00FB   0093           00078         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
00FC   0806           00079         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
00FD   390F           00080         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
00FE   0493           00081         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
                      00082                                         ; y en la parte baja lo que había antes.
00FF   1683           00083         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0100   0806           00084         movf    TRISB,W         ; Guarda la configuración que tenía antes TRISB.
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0101   0095           00085         movwf   LCD_GuardaTRISB
0102   300F           00086         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
0103   0586           00087         andwf   PORTB,F                 ; como estaban y las 4 superiores como salida.
0104   1283           00088         bcf     STATUS,RP0              ; Acceso al Banco 0.
                      00089 ;
0105   0813           00090         movf    LCD_Dato,W              ; Recupera el dato a enviar.
0106   0086           00091         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
0107   1505           00092         bsf     LCD_PinEnable           ; Permite funcionamiento del LCD mediante un pequeño
0108   1105           00093         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
0109   1683           00094         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
010A   0815           00095         movf    LCD_GuardaTRISB,W       ; la configuración del Puerto B.
010B   0086           00096         movwf   PORTB                   ; Realmente es TRISB.
010C   1283           00097         bcf     STATUS,RP0              ; Acceso al Banco 0.
010D   0008           00098         return
                      00099 
                      00100 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00101 ;
                      00102 ;Los comandos que pueden ser ejecutados son:
                      00103 ;
010E                  00104 LCD_CursorIncr                          ; Cursor en modo incrementar.
010E   3006           00105         movlw   b'00000110'
010F   2921           00106         goto    LCD_EnviaComando
0110                  00107 LCD_Linea1                              ; Cursor al principio de la Línea 1.
0110   3080           00108         movlw   b'10000000'             ; Dirección 00h de la DDRAM
0111   2921           00109         goto    LCD_EnviaComando
0112                  00110 LCD_Linea2                              ; Cursor al principio de la Línea 2.
0112   30C0           00111         movlw   b'11000000'             ; Dirección 40h de la DDRAM
0113   2921           00112         goto    LCD_EnviaComando
0114                  00113 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
0114   3880           00114         iorlw   b'10000000'             ; dirección 80h de la DDRAM más el valor del
0115   2921           00115         goto    LCD_EnviaComando        ; registro W.
0116                  00116 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
0116   38C0           00117         iorlw   b'11000000'             ; dirección C0h de la DDRAM más el valor del
0117   2921           00118         goto    LCD_EnviaComando        ; registro W.
0118                  00119 LCD_OFF                         ; Pantalla apagada.
0118   3008           00120         movlw   b'00001000'
0119   2921           00121         goto    LCD_EnviaComando
011A                  00122 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
011A   300E           00123         movlw   b'00001110'
011B   2921           00124         goto    LCD_EnviaComando
011C                  00125 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
011C   300C           00126         movlw   b'00001100'
011D   2921           00127         goto    LCD_EnviaComando
011E                  00128 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
011E   3001           00129         movlw   b'00000001'             ; cursor a principio de la línea 1.
011F   2921           00130         goto    LCD_EnviaComando
0120                  00131 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
0120   3028           00132         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
                      00133 ;       goto    LCD_EnviaComando        ; 4 bits. 
                      00134 
                      00135 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00136 ;
                      00137 ; "LCD_EnviaComando". Escribe un comando en el registro del módulo LCD. La palabra de
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00138 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
                      00139 ; "LCD_Caracter". Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00140 ; a través del registro W. Trabaja en Modo Dato.
                      00141 ;
0121                  00142 LCD_EnviaComando
0121   1005           00143         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
0122   2925           00144         goto    LCD_Envia
0123                  00145 LCD_Caracter
0123   1405           00146         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
0124   212D           00147         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
0125                  00148 LCD_Envia
0125   0094           00149         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
0126   20FA           00150         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
0127   0E14           00151         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
                      00152                                         ; nibble bajo del dato a enviar a parte alta del byte.
0128   20FA           00153         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
0129   1C05           00154         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
012A   21B1           00155         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
012B   219D           00156         call    Retardo_50micros
012C   0008           00157         return  
                      00158 
                      00159 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00160 ;
                      00161 ; A partir del carácter ASCII número 127 los códigos de los caracteres definidos en la
                      00162 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00163 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00164 ;
                      00165 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00166 ; que puedan ser visualizado en el módulo LM016L.
                      00167 ; 
                      00168 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00169 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00170 
012D                  00171 LCD_CodigoCGROM
012D   0093           00172         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
012E                  00173 LCD_EnheMinuscula                       ; un carácter especial.
012E   3CF1           00174         sublw   'ñ'                     ; ¿Es la "ñ"?
012F   1D03           00175         btfss   STATUS,Z
0130   2934           00176         goto    LCD_EnheMayuscula       ; No es "ñ".
0131   30EE           00177         movlw   b'11101110'             ; Código CGROM de la "ñ".
0132   0093           00178         movwf   LCD_Dato
0133   2941           00179         goto    LCD_FinCGROM
0134                  00180 LCD_EnheMayuscula
0134   0813           00181         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
0135   3CD1           00182         sublw   'Ñ'                     ; ¿Es la "Ñ"?
0136   1D03           00183         btfss   STATUS,Z
0137   293B           00184         goto    LCD_Grado               ; No es "Ñ".
0138   30EE           00185         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
0139   0093           00186         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
013A   2941           00187         goto    LCD_FinCGROM    
013B                  00188 LCD_Grado
013B   0813           00189         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
013C   3CBA           00190         sublw   'º'                     ; ¿Es el símbolo "º"?
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013D   1D03           00191         btfss   STATUS,Z
013E   2941           00192         goto    LCD_FinCGROM            ; No es "º".
013F   30DF           00193         movlw   b'11011111'             ; Código CGROM del símbolo "º".
0140   0093           00194         movwf   LCD_Dato
0141                  00195 LCD_FinCGROM
0141   0813           00196         movf    LCD_Dato,W              ; En (W) el código buscado.
0142   0008           00197         return
                      00198 
                      00199 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00200 ;
                      00201 ; Visualiza espacios en blanco.
                      00202 
0143                  00203 LCD_LineaEnBlanco
0143   3010           00204         movlw   LCD_CaracteresPorLinea
0144   294A           00205         goto    LCD_EnviaBlancos
0145                  00206 LCD_UnEspacioBlanco
0145   3001           00207         movlw   .1
0146   294A           00208         goto    LCD_EnviaBlancos
0147                  00209 LCD_DosEspaciosBlancos
0147   3002           00210         movlw   .2
0148   294A           00211         goto    LCD_EnviaBlancos
0149                  00212 LCD_TresEspaciosBlancos
0149   3003           00213         movlw   .3
014A                  00214 LCD_EnviaBlancos
014A   0096           00215         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
014B                  00216 LCD_EnviaOtroBlanco     
014B   3020           00217         movlw   ' '                     ; Esto es un espacio en blanco.
014C   2123           00218         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
014D   0B96           00219         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
014E   294B           00220         goto    LCD_EnviaOtroBlanco
014F   0008           00221         return
                      00222 
                      00223 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00224 ;
                      00225 ; Subrutina "LCD_ByteCompleto", visualiza el byte que almacena el registro W en el
                      00226 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00227 ;
                      00228 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero 
                      00229 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00230 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00231 ;
                      00232 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00233 ;
0150                  00234 LCD_Byte
0150   0097           00235         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
0151   39F0           00236         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
0152   1D03           00237         btfss   STATUS,Z                ; Si es cero lo apaga.
0153   2958           00238         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
0154   3020           00239         movlw   ' '                     ; Visualiza un espacio en blanco.
0155   2123           00240         call    LCD_Caracter
0156   295A           00241         goto    LCD_VisualizaBajo
                      00242 
0157                  00243 LCD_ByteCompleto
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0157   0097           00244         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
0158                  00245 LCD_VisualizaAlto
0158   0E17           00246         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
0159   215B           00247         call    LCD_Nibble              ; Lo visualiza.
015A                  00248 LCD_VisualizaBajo
015A   0817           00249         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00250 ;       call    LCD_Nibble              ; Lo visualiza.
                      00251 ;       return
                      00252 
                      00253 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00254 ;
                      00255 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00256 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00257 ; - Si (W)=b'01010110', se visualizará "6". 
                      00258 ; - Si (W)=b'10101110', se visualizará "E". 
                      00259 ;
015B                  00260 LCD_Nibble
015B   390F           00261         andlw   b'00001111'             ; Se queda con la parte baja.
015C   0096           00262         movwf   LCD_Auxiliar1           ; Lo guarda.
015D   3C09           00263         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
015E   1C03           00264         btfss   STATUS,C        
015F   2963           00265         goto    LCD_EnviaByteLetra
0160   0816           00266         movf    LCD_Auxiliar1,W
0161   3E30           00267         addlw   '0'                     ; El número se pasa a carácter ASCII sumándole
0162   2965           00268         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
0163                  00269 LCD_EnviaByteLetra
0163   0816           00270         movf    LCD_Auxiliar1,W
0164   3E37           00271         addlw   'A'-0x0A                        ; Sí, por tanto, se le suma el ASCII de la 'A'.
0165                  00272 LCD_FinVisualizaDigito
0165   2923           00273         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00274                                         ; para no sobrecargar la pila.
                      00114         INCLUDE <LCD_MENS.INC>
                      00001 
                      00002 ; Librería de subrutinas para el manejo de mensajes a visualizar en un visualizador LCD.
                      00003 
                      00004         CBLOCK
  00000018            00005         LCD_ApuntaCaracter              ; Indica la posición del carácter a visualizar
                      00006                                         ; respecto del comienzo de todos los mensajes,
                      00007                                         ; (posición de la etiqueta "Mensajes").
  00000019            00008         LCD_ValorCaracter                       ; Código ASCII del carácter a 
                      00009         ENDC                            ; visualizar.
                      00010 
                      00011 ; Los mensajes tienen que estar situados dentro de las 256 primeras posiciones de la 
                      00012 ; memoria de programa, es decir, no pueden superar la dirección 0FFh.
                      00013 
                      00014 ; Subrutina "LCD_Mensaje" ---------------------------------------------------------------
                      00015 ;
                      00016 ; Visualiza por pantalla el mensaje apuntado por el registro W.
                      00017 ;
                      00018 ; Los mensajes deben localizarse dentro de una zona encabezada por la etiqueta "Mensajes" y que
                      00019 ; tenga la siguiente estructura:
                      00020 ;
                      00021 ; Mensajes                              ; ¡Etiqueta obligatoria!
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00022 ;       addwf   PCL,F
                      00023 ; Mensaje0                              ; Posición inicial del mensaje.
                      00024 ;       DT ".. ..", 0x00                        ; Mensaje terminado en 0x00.
                      00025 ; Mensaje1
                      00026 ;       ...     
                      00027 ;       ...
                      00028 ; FinMensajes
                      00029 ;
                      00030 ; La llamada a esta subrutina se realizará siguiendo este ejemplo:
                      00031 ;
                      00032 ;       movlw   Mensaje0                        ; Carga la posición del mensaje.
                      00033 ;       call    LCD_Mensaje             ; Visualiza el mensaje.
                      00034 ;
0166                  00035 LCD_Mensaje
0166   0098           00036         movwf   LCD_ApuntaCaracter      ; Posición del primer carácter del mensaje.
0167   3017           00037         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
0168   0298           00038         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de etiqueta "Mensajes".
0169   0398           00039         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
016A                  00040 LCD_VisualizaOtroCaracter
016A   0818           00041         movf    LCD_ApuntaCaracter,W
016B   2017           00042         call    Mensajes                        ; Obtiene el código ASCII del carácter apuntado.
016C   0099           00043         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
016D   0899           00044         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
016E   1903           00045         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
016F   2973           00046         goto    LCD_FinMensaje          ; de mensaje, sale fuera.
0170                  00047 LCD_NoUltimoCaracter
0170   2123           00048         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
0171   0A98           00049         incf    LCD_ApuntaCaracter,F    ; Apunta a la posición del siguiente carácter 
0172   296A           00050         goto    LCD_VisualizaOtroCaracter       ; dentro del mensaje.
0173                  00051 LCD_FinMensaje
0173   0008           00052         return                          ; Vuelve al programa principal.
                      00053 
                      00054 ; Subrutina "LCD_MensajeMovimiento" -----------------------------------------------------
                      00055 ;
                      00056 ; Visualiza un mensaje de mayor longitud que los 16 caracteres que pueden representarse
                      00057 ; en una línea, por tanto se desplaza a través de la pantalla.
                      00058 ;
                      00059 ; En el mensaje debe dejarse 16 espacios en blanco, al principio y al final para
                      00060 ; conseguir que el desplazamiento del mensaje sea lo más legible posible.
                      00061 ;
                      00062         CBLOCK  
  0000001A            00063         LCD_CursorPosicion              ; Contabiliza la posición del cursor dentro de la
                      00064         ENDC                            ; pantalla LCD
                      00065 
0174                  00066 LCD_MensajeMovimiento
0174   0098           00067         movwf   LCD_ApuntaCaracter      ; Posición del primer carácter del mensaje.
0175   3017           00068         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
0176   0298           00069         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de la etiqueta "Mensajes".
0177   0398           00070         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
0178                  00071 LCD_PrimeraPosicion
0178   019A           00072         clrf    LCD_CursorPosicion      ; El cursor en la posición 0 de la línea.
0179   211E           00073         call    LCD_Borra               ; Se sitúa en la primera posición de la línea 1 y
017A                  00074 LCD_VisualizaCaracter                   ; borra la pantalla.
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017A   3010           00075         movlw   LCD_CaracteresPorLinea  ; ¿Ha llegado a final de línea?
017B   021A           00076         subwf   LCD_CursorPosicion,W
017C   1D03           00077         btfss   STATUS,Z
017D   2983           00078         goto    LCD_NoEsFinalLinea
                      00079 
017E                  00080 LCD_EsFinalLinea
017E   21A5           00081         call    Retardo_200ms           ; Lo mantiene visualizado durante este tiempo.
017F   21A5           00082         call    Retardo_200ms
0180   300F           00083         movlw   LCD_CaracteresPorLinea-1; Apunta a la posición del segundo carácter visualizado
0181   0298           00084         subwf   LCD_ApuntaCaracter,F    ; en pantalla, que será el primero en la siguiente
0182   2978           00085         goto    LCD_PrimeraPosicion      ; visualización de línea, para producir el efecto
0183                  00086 LCD_NoEsFinalLinea                      ; de desplazamiento hacia la izquierda.
0183   0818           00087         movf    LCD_ApuntaCaracter,W
0184   2017           00088         call    Mensajes                        ; Obtiene el ASCII del carácter apuntado.
0185   0099           00089         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
0186   0899           00090         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
0187   1903           00091         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
0188   298D           00092         goto    LCD_FinMovimiento       ; de mensaje, sale fuera.
0189                  00093 LCD_NoUltimoCaracter2
0189   2123           00094         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
018A   0A9A           00095         incf    LCD_CursorPosicion,F    ; Contabiliza el incremento de posición del 
                      00096                                         ; cursor en la pantalla.
018B   0A98           00097         incf    LCD_ApuntaCaracter,F    ; Apunta a la siguiente posición por visualizar.
018C   297A           00098         goto    LCD_VisualizaCaracter   ; Vuelve a visualizar el siguiente carácter
018D                  00099 LCD_FinMovimiento                       ; de la línea.
018D   0008           00100         return                          ; Vuelve al programa principal.
                      00101         
                      00102 
                      00115         INCLUDE <RETARDOS.INC>
                      00001 ;       ===================================================================
                      00002 ;
                      00003 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00004 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00005 ;
                      00006 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00007 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
                      00008 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
                      00009 ;
                      00010 ; En los comentarios, "cm" significa "ciclos máquina".
                      00011 ;
                      00012 ; ZONA DE DATOS *********************************************************************
                      00013 
                      00014         CBLOCK
  0000001B            00015         R_ContA                         ; Contadores para los retardos.
  0000001C            00016         R_ContB
  0000001D            00017         R_ContC
                      00018         ENDC
                      00019 ;
                      00020 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00021 ;
                      00022 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00023 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00024 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00025 ;
018E                  00026 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
018E   0000           00027         nop                             ; Aporta 1 ciclo máquina.
018F   0000           00028         nop                             ; Aporta 1 ciclo máquina.
0190   0000           00029         nop                             ; Aporta 1 ciclo máquina.
0191   0000           00030         nop                             ; Aporta 1 ciclo máquina.
0192   0000           00031         nop                             ; Aporta 1 ciclo máquina.
0193                  00032 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
0193   0000           00033         nop                             ; Aporta 1 ciclo máquina.
0194                  00034 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
0194   0008           00035         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00036 ;
                      00037 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00038 ;
0195                  00039 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
0195   0000           00040         nop                             ; Aporta 1 ciclo máquina.
0196   30A4           00041         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
0197   29A1           00042         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0198                  00043 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
0198   0000           00044         nop                             ; Aporta 1 ciclo máquina.
0199   3040           00045         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
019A   29A1           00046         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
019B                  00047 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
019B   301F           00048         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
019C   29A1           00049         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
019D                  00050 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
019D   0000           00051         nop                             ; Aporta 1 ciclo máquina.
019E   300E           00052         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
019F   29A1           00053         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
01A0                  00054 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
01A0   3005           00055         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
                      00056 ;
                      00057 ; El próximo bloque "RetardoMicros" tarda:
                      00058 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
                      00059 ;
01A1                  00060 RetardoMicros
01A1   009B           00061         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
01A2                  00062 Rmicros_Bucle
01A2   0B9B           00063         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
01A3   29A2           00064         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
01A4   0008           00065         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00066 ;
                      00067 ;En total estas subrutinas tardan:
                      00068 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00069 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00070 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00071 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00072 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00073 ;
                      00074 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00075 ;
01A5                  00076 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
01A5   30C8           00077         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A6   29B4           00078         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01A7                  00079 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
01A7   3064           00080         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
01A8   29B4           00081         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01A9                  00082 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
01A9   3032           00083         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
01AA   29B4           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01AB                  00085 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
01AB   3014           00086         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
01AC   29B4           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01AD                  00088 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
01AD   300A           00089         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
01AE   29B4           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01AF                  00091 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
01AF   3005           00092         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
01B0   29B4           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01B1                  00094 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
01B1   3002           00095         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
01B2   29B4           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01B3                  00097 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
01B3   3001           00098         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00099 ;
                      00100 ; El próximo bloque "Retardos_ms" tarda:
                      00101 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00102 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00103 ; que a 4 MHz son 1002 µs = 1 ms.
                      00104 ;
01B4                  00105 Retardos_ms
01B4   009C           00106         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
01B5                  00107 R1ms_BucleExterno
01B5   30F9           00108         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
01B6   009B           00109         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
01B7                  00110 R1ms_BucleInterno
01B7   0000           00111         nop                             ; Aporta KxMx1 ciclos máquina.
01B8   0B9B           00112         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
01B9   29B7           00113         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
01BA   0B9C           00114         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
01BB   29B5           00115         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
01BC   0008           00116         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00117 ;
                      00118 ;En total estas subrutinas tardan:
                      00119 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00120 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00121 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00122 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00123 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00124 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00125 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00126 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00127 ;
                      00128 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00129 ;
01BD                  00130 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BD   30C8           00131         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
01BE   29C8           00132         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
01BF                  00133 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
01BF   3064           00134         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
01C0   29C8           00135         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
01C1                  00136 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
01C1   3032           00137         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
01C2   29C8           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
01C3                  00139 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
01C3   3014           00140         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
01C4   29C8           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
01C5                  00142 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
01C5   300A           00143         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
01C6   29C8           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
01C7                  00145 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
01C7   3005           00146         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00147 ;
                      00148 ; El próximo bloque "Retardo_1Decima" tarda:
                      00149 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00150 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00151 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00152 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00153 ;
01C8                  00154 Retardo_1Decima
01C8   009D           00155         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
01C9                  00156 R1Decima_BucleExterno2
01C9   3064           00157         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
01CA   009C           00158         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
01CB                  00159 R1Decima_BucleExterno
01CB   30F9           00160         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
01CC   009B           00161         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
01CD                  00162 R1Decima_BucleInterno          
01CD   0000           00163         nop                             ; Aporta KxMxNx1 ciclos máquina.
01CE   0B9B           00164         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
01CF   29CD           00165         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
01D0   0B9C           00166         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
01D1   29CB           00167         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
01D2   0B9D           00168         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
01D3   29C9           00169         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
01D4   0008           00170         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00171 ;
                      00172 ;En total estas subrutinas tardan:
                      00173 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00174 ;                       (N=200, M=100 y K=249).
                      00175 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00176 ;                       (N=100, M=100 y K=249).
                      00177 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00178 ;                       (N= 50, M=100 y K=249).
                      00179 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00180 ;                       (N= 20, M=100 y K=249).
                      00181 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00182 ;                       (N= 10, M=100 y K=249).
                      00183 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00184 ;                       (N=  5, M=100 y K=249).
                      00116         INCLUDE <CARGANDO.INC>          ;Includes Propios
                      00001 ; ** CARGANDO.INC *************************************************
                      00002 ; **               Francisco Javier Merchán Macías               **
                      00003 ; **                     Fatima Romero Romero                    **
                      00004 ; **                     Esmeralda Rubio Parra                   **
                      00005 ; **                       I.T.T.Telemática                      **
                      00006 ; *****************************************************************
                      00007 ; ** Descripción:                                                **
                      00008 ; **                                                             **
                      00009 ; **   Libreria para cargar los datos a enviar                   **
                      00010 ; **                                                             **
                      00011 ; **                                                             **
                      00012 ; **                                                             **
                      00013 ; *****************************************************************
                      00014 
01D5                  00015 Cargando
01D5   21C3           00016         call    Retardo_2s
01D6   3008           00017         movlw   0x08
01D7   008D           00018         movwf   ContadorEnvio                   ;Cargamos el contador con un 8
01D8   018C           00019         clrf    ENVIO
01D9   20E2           00020         call    LCD_Inicializa                  ;Hacemos un cuadro para meter los valores que carguemos.
01DA   211E           00021         call    LCD_Borra
01DB   3003           00022         movlw   0x03
01DC   2114           00023         call    LCD_PosicionLinea1
01DD   305B           00024         movlw   '['
01DE   2123           00025         call    LCD_Caracter
01DF   300C           00026         movlw   0x0c
01E0   2114           00027         call    LCD_PosicionLinea1
01E1   305D           00028         movlw   ']'
01E2   2123           00029         call    LCD_Caracter
01E3   3004           00030         movlw   0x04
01E4   2114           00031         call    LCD_PosicionLinea1
                      00032 
01E5                  00033 CargandoInicio                                          ;Leemos el interruptor y lo cargamos en un regis
                            tro.
01E5   1A05           00034         btfsc   Pulsador
01E6   29E8           00035         goto    CargandoUno
01E7   29F0           00036         goto    CargandoCero
                      00037 
01E8                  00038 CargandoUno
01E8   1403           00039         bsf             STATUS,C
01E9   0C8C           00040         rrf             ENVIO,1
                      00041 ;   ESCRIBE UN 1 EN LA PANTALLA LCD
01EA   3031           00042         movlw   '1'
01EB   2123           00043         call    LCD_Caracter
01EC   21C3           00044         call    Retardo_2s
                      00045 ;   DECREMENTAMOS EL CONTADOR
01ED   0B8D           00046         decfsz  ContadorEnvio,1
01EE   29E5           00047         goto    CargandoInicio
01EF   29F7           00048         goto    CargandoFin
                      00049 
01F0                  00050 CargandoCero
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F0   1003           00051         bcf             STATUS,C
01F1   0C8C           00052         rrf             ENVIO,1
                      00053 ;   ESCRIBE UN 0 EN LA PANTALLA LCD
01F2   3030           00054         movlw   '0'
01F3   2123           00055         call    LCD_Caracter
01F4   21C3           00056         call    Retardo_2s
                      00057 ;   DECREMENTAMOS EL CONTADOR
01F5   0B8D           00058         decfsz  ContadorEnvio,1
01F6   29E5           00059         goto    CargandoInicio
01F7                  00060 CargandoFin
01F7   211E           00061         call    LCD_Borra
01F8   2112           00062         call    LCD_Linea2
01F9   3048           00063         movlw   MensajeDatCargado
01FA   2166           00064         call    LCD_Mensaje
01FB   21C3           00065         call    Retardo_2s
                      00066 
01FC   0008           00067         return
                      00117         INCLUDE <ELEGIR.INC>
                      00001 ; ** ELEGIR.INC ***************************************************
                      00002 ; **               Francisco Javier Merchán Macías               **
                      00003 ; **                     Fatima Romero Romero                    **
                      00004 ; **                     Esmeralda Rubio Parra                   **
                      00005 ; **                       I.T.T.Telemática                      **
                      00006 ; *****************************************************************
                      00007 ; ** Descripción:                                                **
                      00008 ; **                                                             **
                      00009 ; **   Libreria para elegir si es emisor o receptor              **
                      00010 ; **                                                             **
                      00011 ; **                                                             **
                      00012 ; **                                                             **
                      00013 ; *****************************************************************
                      00014 
01FD                  00015 Elegir
01FD   1E05           00016         btfss   Pulsador                ;Si es 0 ejecuta la siguiente instrucción, si es 1 salta la inst
                            rucción
01FE   2A10           00017         goto    ElegirEsCero
                      00018 
                      00019 ; ///////////////////////////////////////////////////////////////////////////////
                      00020 ; /////////////////////////  INICIO EMISOR  /////////////////////////////////////
                      00021 ; ///////////////////////////////////////////////////////////////////////////////
01FF                  00022 ElegirNoEsCero                          ;Esto es el EMISOR *********************************************
                            **
01FF   211E           00023         call    LCD_Borra
0200   303F           00024         movlw   Mensaje1
0201   2166           00025         call    LCD_Mensaje
0202   21C3           00026         call    Retardo_2s
                      00027 
                      00028 ;Informar al otro pic que somos Emisor
                      00029 ;       bcf             SalidaComprobar                         ;Ponemos a 0 la Puerta RB3
0203   1486           00030         bsf             PuertaEnviar
0204   21C1           00031         call    Retardo_5s                      ;Esperamos antes de comprobar las entradas
                      00032 
                      00033 ;------------------------Comprobamos que el otro pic es Receptor
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00034 ;       btfsc   EntradaComprobar
0205   1C06           00035         btfss   PuertaRecibir
0206   2A08           00036         goto    BIENTenemosReceptor             ;RB2 = 1 ESTA BIEN, TEMEMOS UN RECEPTOR AL OTRO LADO.
0207   2A20           00037         goto    ErrorHayDosEmisores             ;RB2 = 0 No hay receptor al otro lado!!!!
                      00038 ;------------------------Comprobamos que el otro pic es Receptor
                      00039 
0208                  00040 BIENTenemosReceptor
                      00041 ;*****************************
                      00042 ;** ENCONTRAMOS EL RECEPTOR **
                      00043 ;*****************************
0208   0103           00044         clrw
0209   211E           00045         call    LCD_Borra
020A   30D2           00046         movlw   MensajeReceptorEncontrado
020B   2166           00047         call    LCD_Mensaje
020C   21C3           00048         call    Retardo_2s
020D   21D5           00049         call    Cargando
020E   222D           00050         call    Emitir
                      00051 
020F   2A2C           00052         goto    ElegirFIN
                      00053 
                      00054 ; ////////////////////////////////////////////////////////////////////////////////
                      00055 ; ///////////////////////// INICIO REPCEPTOR /////////////////////////////////////
                      00056 ; ////////////////////////////////////////////////////////////////////////////////
0210                  00057 ElegirEsCero                            ;Este es el RECEPTOR *******************************************
                            ****
0210   211E           00058         call    LCD_Borra
0211   3034           00059         movlw   Mensaje0
0212   2166           00060         call    LCD_Mensaje
0213   21C3           00061         call    Retardo_2s
                      00062 
                      00063 ;Informar al otro pic que somos Receptor
                      00064 ;       bsf             SalidaComprobar                         ;Ponemos a 0 la Puerta RB3
0214   1086           00065         bcf             PuertaEnviar
0215   21C1           00066         call    Retardo_5s                      ;Esperamos antes de comprobar las entradas
                      00067 
                      00068 ;------------------------Comprobamos que el otro pic es Emisor
                      00069 ;       btfsc   EntradaComprobar
0216   1C06           00070         btfss   PuertaRecibir
0217   2A26           00071         goto    ErrorHayDosReceptores           ;RB2 = 0 No hay receptor al otro lado!!!!
0218   2A19           00072         goto    BIENTenemosEmisor                       ;RB2 = 1 ESTA BIEN, TEMEMOS UN RECEPTOR AL OTRO 
                            LADO.
                      00073 ;------------------------Comprobamos que el otro pic es Receptor
                      00074 
0219                  00075 BIENTenemosEmisor
                      00076 ;***************************
                      00077 ;** ENCONTRAMOS EL EMISOR **
                      00078 ;***************************
0219   0103           00079         clrw
021A   211E           00080         call    LCD_Borra
021B   30C4           00081         movlw   MensajeEmisorEncontrado
021C   2166           00082         call    LCD_Mensaje
021D   21C3           00083         call    Retardo_2s
                      00084 
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021E   224C           00085         call    Recibir
021F   2A2C           00086         goto    ElegirFIN
                      00087 
0220                  00088 ErrorHayDosEmisores
0220   0103           00089         clrw
0221   211E           00090         call    LCD_Borra
0222   30A4           00091         movlw   MensajeErrorHayDosEmisores
0223   2166           00092         call    LCD_Mensaje
0224   21C3           00093         call    Retardo_2s
0225   2808           00094         goto    Dormir
                      00095 
0226                  00096 ErrorHayDosReceptores
0226   0103           00097         clrw
0227   211E           00098         call    LCD_Borra
0228   30B4           00099         movlw   MensajeErrorHayDosReceptores
0229   2166           00100         call    LCD_Mensaje
022A   21C3           00101         call    Retardo_2s
022B   2808           00102         goto    Dormir
                      00103 
022C                  00104 ElegirFIN
022C   0008           00105         return
                      00118         INCLUDE <EMITIR.INC>
                      00001 ; ** EMITIR.INC ***************************************************
                      00002 ; **               Francisco Javier Merchán Macías               **
                      00003 ; **                     Fatima Romero Romero                    **
                      00004 ; **                     Esmeralda Rubio Parra                   **
                      00005 ; **                       I.T.T.Telemática                      **
                      00006 ; *****************************************************************
                      00007 ; ** Descripción:                                                **
                      00008 ; **                                                             **
                      00009 ; **   Emitir                                                                                    **
                      00010 ; **                                                             **
                      00011 ; **       El registro que contiene los datos es ENVIO           **
                      00012 ; **  PuertaEnviar:  Emitimos por RB1                            **
                      00013 ; **  PuertaRecibir: Recibimos por RB0                           **
                      00014 ; *****************************************************************
                      00015 
022D                  00016 Emitir
                      00017 ; Comprobamos si el receptor es un receptor o emisor, para evitar problemas de emisión
022D   3008           00018         movlw   0x08
022E   008E           00019         movwf   ContadorEmisor
                      00020 
                      00021 ; Empezamos a enviar el bit START
022F   0103           00022         clrw                                            ;Ponemos mensaje EMITIENDO
0230   211E           00023         call    LCD_Borra
0231   3057           00024         movlw   MensajeEmitiendo
0232   2166           00025         call    LCD_Mensaje
0233   21C5           00026         call    Retardo_1s
                      00027 
                      00028 ;PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0234   1406           00029         bsf             TRISB,0                         ;Ponemos a 1 las puertas de salida
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0235   1486           00030         bsf             TRISB,1                         ;Ponemos a 1 las puertas de salida
                      00031 ;PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA
                      00032         
0236   1086           00033         bcf             PuertaEnviar                            ;Enviamos un 0. BIT de START
0237   21C5           00034         call    Retardo_1s
                      00035 
                      00036 ; Emitimos la cadena almacenada
0238                  00037 ComenzamosAEmitir
0238   0C8C           00038         rrf             ENVIO,1
0239   1803           00039         btfsc   STATUS,C
023A   2A3C           00040         goto    EnviarUno                       ;Envia un 1
023B   2A41           00041         goto    EnviarCero                      ;Envia un 0
                      00042 
023C                  00043 EnviarUno
023C   1486           00044         bsf             PuertaEnviar
023D   21C5           00045         call    Retardo_1s
023E   0B8E           00046         decfsz  ContadorEmisor,F
023F   2A38           00047         goto    ComenzamosAEmitir
0240   2A45           00048         goto    EmitirFIN
                      00049 
0241                  00050 EnviarCero      
0241   1086           00051         bcf             PuertaEnviar
                      00052 ;       call    Retardo_5s
0242   21C5           00053         call    Retardo_1s
0243   0B8E           00054         decfsz  ContadorEmisor,F
0244   2A38           00055         goto    ComenzamosAEmitir
                      00056 ;       goto    EmitirFIN                       ; No hace falta esta instrucción porque tenemos el codig
                            o debajo.
                      00057 
0245                  00058 EmitirFIN
                      00059 ;Ponemos el BIT de STOP
0245   1486           00060         bsf             PuertaEnviar
0246   21C3           00061         call    Retardo_2s
0247   211E           00062         call    LCD_Borra
0248   3074           00063         movlw   MensDatosEnv
0249   2166           00064         call    LCD_Mensaje
024A   21C3           00065         call    Retardo_2s
024B   0008           00066         return
                      00119         INCLUDE <RECIBIR.INC>
                      00001 ; ** RECIBIR.INC **************************************************
                      00002 ; **               Francisco Javier Merchán Macías               **
                      00003 ; **                     Fatima Romero Romero                    **
                      00004 ; **                     Esmeralda Rubio Parra                   **
                      00005 ; **                       I.T.T.Telemática                      **
                      00006 ; *****************************************************************
                      00007 ; ** Descripción:                                                **
                      00008 ; **                                                             **
                      00009 ; **   Recibir                                                                                   **
                      00010 ; **                                                             **
                      00011 ; **                                                             **
                      00012 ; **  Emitimos por RA1                                           **
                      00013 ; **  Recibimos por RA0 (Para comprobar si el otro es emisor o no**
                      00014 ; *****************************************************************
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00015 
024C                  00016 Recibir
024C   0103           00017         clrw
024D   3008           00018         movlw   0x08
024E   008F           00019         movwf   ContadorReceptor                ;Cargamos el contador con un 8
                      00020 
024F   0103           00021         clrw
0250   211E           00022         call    LCD_Borra
0251   3065           00023         movlw   MensajeRecibiendo
0252   2166           00024         call    LCD_Mensaje
0253   21C3           00025         call    Retardo_2s
                      00026 
                      00027 ;----------------PRUEBA-----------------------
                      00028 ;Comprobar
                      00029 ;       btfsc   PuertaRecibir
                      00030 ;       goto    RecibirUno
                      00031 ;       goto    RecibirCero
                      00032 
                      00033 ;RecibirUno
                      00034 ;       call    LCD_Borra
                      00035 ;       movlw   RecibimosUno
                      00036 ;       call    LCD_Mensaje
                      00037 ;       call    Retardo_100ms
                      00038 ;       goto    Comprobar
                      00039 
                      00040 ;RecibirCero
                      00041 ;       call    LCD_Borra
                      00042 ;       movlw   RecibimosCero
                      00043 ;       call    LCD_Mensaje
                      00044 ;       call    Retardo_100ms
                      00045 ;       goto    Comprobar
                      00046 ;---------------FIN PRUEBA--------------------
                      00047 
                      00048 ;Empezamos a Recibir el bit START
0254                  00049 BitStart
                      00050 ;Ponemos a 1 las puertas para evitar Falsos Positivos
                      00051 ;PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA
0254   1406           00052         bsf             PuertaRecibir                           ;Ponemos a 1 las puertas de salida
0255   1486           00053         bsf             PuertaEnviar                            ;Ponemos a 1 las puertas de salida
                      00054 ;       bsf             EntradaComprobar
                      00055 ;       bsf             SalidaComprobar
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0256   1406           00056         bsf             TRISB,0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0257   1486           00057         bsf             TRISB,1
                      00058 ;       bsf             TRISB,2
                      00059 ;       bsf             TRISB,3
                      00060 ;PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA
                      00061 
0258   1806           00062         btfsc   PuertaRecibir   ;COMPROBAMOS SI ES UN 0 (Bit de Start)
0259   2A54           00063         goto    BitStart                ;Si es 1 vuelve a comprobar hasta que le llega un 0
                      00064                                                         ;Si es 0 POSIBLEMENTE tenemos el bit de Start y 
                            continuamos el codigo.
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

025A   21A5           00065         call    Retardo_200ms
025B   21A5           00066         call    Retardo_200ms
025C   21A7           00067         call    Retardo_100ms   ;Esperamos medio segundo para comprobar si es un 0 o no
025D   1806           00068         btfsc   PuertaRecibir   ;VOLVEMOS A COMPROBAR QUE ES UN 0.
025E   2A54           00069         goto    BitStart                ;No es el bit de Start, es un error.
025F   211E           00070         call    LCD_Borra               ;Si es el bit de Start lo muestra en pantalla
0260   2110           00071         call    LCD_Linea1
0261   3090           00072         movlw   MensajeBitStart
0262   2166           00073         call    LCD_Mensaje
0263   21A5           00074         call    Retardo_200ms
0264   21A5           00075         call    Retardo_200ms
0265   21A7           00076         call    Retardo_100ms   ;Esperamos otro medio segundo
0266   21A5           00077         call    Retardo_200ms   ;200ms más para no estar al comienzo del bit, sino un poco más al medio.
0267   2112           00078         call    LCD_Linea2
                      00079 
0268                  00080 DRecibido                               ;SI ES EL BIT DE START (comenzamos a recibir)
0268   1806           00081         btfsc   PuertaRecibir
0269   2A6B           00082         goto    RecUno
026A   2A73           00083         goto    RecCero
                      00084 
026B                  00085 RecUno
                      00086 ;   ESCRIBE UN 1 EN LA PANTALLA LCD
026B   3031           00087         movlw   '1'
026C   2123           00088         call    LCD_Caracter
026D   21C5           00089         call    Retardo_1s
                      00090 ;       GUARDAMOS LO QUE RECIBIMOS EN UN REGISTRO
026E   1403           00091         bsf             STATUS,C
026F   0C90           00092         rrf             DatosRecibido,1
                      00093 ;   DECREMENTAMOS EL CONTADOR
0270   0B8F           00094         decfsz  ContadorReceptor,1
0271   2A68           00095         goto    DRecibido                               ;Ir al inicio de DRecibido o lo que es lo mismo 
                            DatoRecibido
0272   2A7A           00096         goto    BitStop
                      00097 
0273                  00098 RecCero
                      00099 ;   ESCRIBE UN 0 EN LA PANTALLA LCD
0273   3030           00100         movlw   '0'
0274   2123           00101         call    LCD_Caracter
0275   21C5           00102         call    Retardo_1s
                      00103 ;       GUARDAMOS LO QUE RECIBIMOS EN UN REGISTRO
0276   1003           00104         bcf             STATUS,C
0277   0C90           00105         rrf             DatosRecibido,1
                      00106 ;   DECREMENTAMOS EL CONTADOR
0278   0B8F           00107         decfsz  ContadorReceptor,1
0279   2A68           00108         goto    DRecibido                               ;Ir al inicio de DRecibido o lo que es lo mismo 
                            DatoRecibido
                      00109 
027A                  00110 BitStop
027A   21C5           00111         call    Retardo_1s
027B   2110           00112         call    LCD_Linea1
027C   309A           00113         movlw   MensajeBStop
027D   2166           00114         call    LCD_Mensaje
027E   21C3           00115         call    Retardo_2s
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00116 
027F                  00117 FinReceptor
027F   211E           00118         call    LCD_Borra
0280   3083           00119         movlw   RecCorrect
0281   2166           00120         call    LCD_Mensaje
0282   21C3           00121         call    Retardo_2s
                      00122 
0283                  00123 PintarEnLeds
                      00124 ;       call    LCD_OFF                         ;Apagamos el LCD
                      00125 ;   CONFIGURACIÓN DE ENTRADAS Y SALIDAS ***************************
0283   1683           00126         bsf             STATUS, RP0                     ;Acceso al banco 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0284   0186           00127         clrf    TRISB                           ;Todas las líneas del Puerto B como salida
0285   1283           00128         bcf     STATUS, RP0                     ;Acceso al banco 0
                      00129 ;       FIN DE CONFIGURACIÓN DE LAS ENTRADAS Y SALIDAS
                      00130 
                      00131 ;       MOSTRAMOS EL DATO RECIBIDO EN LOS LEDs
0286   0C90           00132         rrf             DatosRecibido,1
0287   1803           00133         btfsc   STATUS,C
0288   2A8A           00134         goto    RB7_1
0289   2A8C           00135         goto    RB7_0
028A                  00136 RB7_1   
028A   1786           00137         bsf             PORTB,7
028B   2A8D           00138         goto    RB6_Continua
028C                  00139 RB7_0   
028C   1386           00140         bcf             PORTB,7
                      00141 
028D                  00142 RB6_Continua
028D   0C90           00143         rrf             DatosRecibido,1
028E   1803           00144         btfsc   STATUS,C
028F   2A91           00145         goto    RB6_1
0290   2A93           00146         goto    RB6_0
0291                  00147 RB6_1
0291   1706           00148         bsf             PORTB,6
0292   2A94           00149         goto    RB5_Continua
0293                  00150 RB6_0   
0293   1306           00151         bcf             PORTB,6
                      00152 
0294                  00153 RB5_Continua
0294   0C90           00154         rrf             DatosRecibido,1
0295   1803           00155         btfsc   STATUS,C
0296   2A98           00156         goto    RB5_1
0297   2A9A           00157         goto    RB5_0
0298                  00158 RB5_1
0298   1686           00159         bsf             PORTB,5
0299   2A9B           00160         goto    RB4_Continua
029A                  00161 RB5_0   
029A   1286           00162         bcf             PORTB,5
                      00163 
029B                  00164 RB4_Continua
029B   0C90           00165         rrf             DatosRecibido,1
029C   1803           00166         btfsc   STATUS,C
029D   2A9F           00167         goto    RB4_1
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029E   2AA1           00168         goto    RB4_0
029F                  00169 RB4_1
029F   1606           00170         bsf             PORTB,4
02A0   2AA2           00171         goto    RB3_Continua
02A1                  00172 RB4_0   
02A1   1206           00173         bcf             PORTB,4
                      00174 
02A2                  00175 RB3_Continua
02A2   0C90           00176         rrf             DatosRecibido,1
02A3   1803           00177         btfsc   STATUS,C
02A4   2AA6           00178         goto    RB3_1
02A5   2AA8           00179         goto    RB3_0
02A6                  00180 RB3_1
02A6   1586           00181         bsf             PORTB,3
02A7   2AA9           00182         goto    RB2_Continua
02A8                  00183 RB3_0   
02A8   1186           00184         bcf             PORTB,3
                      00185 
02A9                  00186 RB2_Continua
02A9   0C90           00187         rrf             DatosRecibido,1
02AA   1803           00188         btfsc   STATUS,C
02AB   2AAD           00189         goto    RB2_1
02AC   2AAF           00190         goto    RB2_0
02AD                  00191 RB2_1
02AD   1506           00192         bsf             PORTB,2
02AE   2AB0           00193         goto    RB1_Continua
02AF                  00194 RB2_0   
02AF   1106           00195         bcf             PORTB,2
                      00196 
02B0                  00197 RB1_Continua
02B0   0C90           00198         rrf             DatosRecibido,1
02B1   1803           00199         btfsc   STATUS,C
02B2   2AB4           00200         goto    RB1_1
02B3   2AB6           00201         goto    RB1_0
02B4                  00202 RB1_1
02B4   1486           00203         bsf             PORTB,1
02B5   2AB7           00204         goto    RB0_Continua
02B6                  00205 RB1_0   
02B6   1086           00206         bcf             PORTB,1
                      00207 
02B7                  00208 RB0_Continua
02B7   0C90           00209         rrf             DatosRecibido,1
02B8   1803           00210         btfsc   STATUS,C
02B9   2ABB           00211         goto    RB0_1
02BA   2ABD           00212         goto    RB0_0
02BB                  00213 RB0_1
02BB   1406           00214         bsf             PORTB,0
02BC   2ABE           00215         goto    RB_Fin
02BD                  00216 RB0_0   
02BD   1006           00217         bcf             PORTB,0
                      00218 
02BE                  00219 RB_Fin
02BE   0008           00220         return
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00120         INCLUDE <LUCES.INC>
02BF                  00001 LucesInicio
02BF   1683           00002         bsf     STATUS,RP0
02C0   0186           00003         clrf    PORTB
02C1   1283           00004         bcf     STATUS,RP0
02C2                  00005 LucesContinua
02C2   3000           00006         movlw   b'00000000'
02C3   0086           00007         movwf   PORTB
02C4   21A5           00008         call    Retardo_200ms
02C5   3081           00009         movlw   b'10000001'
02C6   0086           00010         movwf   PORTB
02C7   21A5           00011         call    Retardo_200ms
02C8   3042           00012         movlw   b'01000010'
02C9   0086           00013         movwf   PORTB
02CA   21A5           00014         call    Retardo_200ms
02CB   3024           00015         movlw   b'00100100'
02CC   0086           00016         movwf   PORTB
02CD   21A5           00017         call    Retardo_200ms
02CE   3018           00018         movlw   b'00011000'
02CF   0086           00019         movwf   PORTB
02D0   21A5           00020         call    Retardo_200ms
02D1   303C           00021         movlw   b'00111100'
02D2   0086           00022         movwf   PORTB
02D3   21A5           00023         call    Retardo_200ms
02D4   307E           00024         movlw   b'01111110'
02D5   0086           00025         movwf   PORTB
02D6   21A5           00026         call    Retardo_200ms
02D7   30FF           00027         movlw   b'11111111'
02D8   0086           00028         movwf   PORTB
02D9   21A5           00029         call    Retardo_200ms
02DA   30E7           00030         movlw   b'11100111'
02DB   0086           00031         movwf   PORTB
02DC   21A5           00032         call    Retardo_200ms
02DD   30C3           00033         movlw   b'11000011'
02DE   0086           00034         movwf   PORTB
02DF   21A5           00035         call    Retardo_200ms
02E0   3081           00036         movlw   b'10000001'
02E1   0086           00037         movwf   PORTB
02E2   21A5           00038         call    Retardo_200ms
02E3   3081           00039         movlw   b'10000001'
02E4   0086           00040         movwf   PORTB
02E5   21A5           00041         call    Retardo_200ms
02E6   30C3           00042         movlw   b'11000011'
02E7   0086           00043         movwf   PORTB
02E8   21A5           00044         call    Retardo_200ms
02E9   30E7           00045         movlw   b'11100111'
02EA   0086           00046         movwf   PORTB
02EB   21A5           00047         call    Retardo_200ms
02EC   30FF           00048         movlw   b'11111111'
02ED   0086           00049         movwf   PORTB
02EE   21A5           00050         call    Retardo_200ms
02EF   30FF           00051         movlw   b'11111111'
02F0   0086           00052         movwf   PORTB
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F1   21A5           00053         call    Retardo_200ms
02F2   307E           00054         movlw   b'01111110'
02F3   0086           00055         movwf   PORTB
02F4   21A5           00056         call    Retardo_200ms
02F5   303C           00057         movlw   b'00111100'
02F6   0086           00058         movwf   PORTB
02F7   21A5           00059         call    Retardo_200ms
02F8   3018           00060         movlw   b'00011000'
02F9   0086           00061         movwf   PORTB
02FA   21A5           00062         call    Retardo_200ms
02FB   3024           00063         movlw   b'00100100'
02FC   0086           00064         movwf   PORTB
02FD   21A5           00065         call    Retardo_200ms
02FE   3042           00066         movlw   b'01000010'
02FF   0086           00067         movwf   PORTB
0300   21A5           00068         call    Retardo_200ms
0301   3081           00069         movlw   b'10000001'
0302   0086           00070         movwf   PORTB
0303   21A5           00071         call    Retardo_200ms
0304   3000           00072         movlw   b'00000000'
0305   0086           00073         movwf   PORTB
0306   21A5           00074         call    Retardo_200ms
0307   3001           00075         movlw   b'00000001'
0308   0086           00076         movwf   PORTB
0309   21A5           00077         call    Retardo_200ms
030A   3002           00078         movlw   b'00000010'
030B   0086           00079         movwf   PORTB
030C   21A5           00080         call    Retardo_200ms
030D   3004           00081         movlw   b'00000100'
030E   0086           00082         movwf   PORTB
030F   21A5           00083         call    Retardo_200ms
0310   3008           00084         movlw   b'00001000'
0311   0086           00085         movwf   PORTB
0312   21A5           00086         call    Retardo_200ms
0313   3010           00087         movlw   b'00010000'
0314   0086           00088         movwf   PORTB
0315   21A5           00089         call    Retardo_200ms
0316   3020           00090         movlw   b'00100000'
0317   0086           00091         movwf   PORTB
0318   21A5           00092         call    Retardo_200ms
0319   3040           00093         movlw   b'01000000'
031A   0086           00094         movwf   PORTB
031B   21A5           00095         call    Retardo_200ms
031C   3080           00096         movlw   b'10000000'
031D   0086           00097         movwf   PORTB
031E   21A5           00098         call    Retardo_200ms
031F   3000           00099         movlw   b'00000000'
0320   0086           00100         movwf   PORTB
0321   21A5           00101         call    Retardo_200ms
0322   3080           00102         movlw   b'10000000'
0323   0086           00103         movwf   PORTB
0324   21A5           00104         call    Retardo_200ms
0325   3040           00105         movlw   b'01000000'
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0326   0086           00106         movwf   PORTB
0327   21A5           00107         call    Retardo_200ms
0328   3020           00108         movlw   b'00100000'
0329   0086           00109         movwf   PORTB
032A   21A5           00110         call    Retardo_200ms
032B   3010           00111         movlw   b'00010000'
032C   0086           00112         movwf   PORTB
032D   21A5           00113         call    Retardo_200ms
032E   3008           00114         movlw   b'00001000'
032F   0086           00115         movwf   PORTB
0330   21A5           00116         call    Retardo_200ms
0331   3004           00117         movlw   b'00000100'
0332   0086           00118         movwf   PORTB
0333   21A5           00119         call    Retardo_200ms
0334   3002           00120         movlw   b'00000010'
0335   0086           00121         movwf   PORTB
0336   21A5           00122         call    Retardo_200ms
0337   3001           00123         movlw   b'00000001'
0338   0086           00124         movwf   PORTB
0339   21A5           00125         call    Retardo_200ms
033A   2AC2           00126         goto LucesContinua
                      00121 
                      00122         END
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

BIENTenemosEmisor                 00000219
BIENTenemosReceptor               00000208
BitStart                          00000254
BitStop                           0000027A
C                                 00000000
Cargando                          000001D5
CargandoCero                      000001F0
CargandoFin                       000001F7
CargandoInicio                    000001E5
CargandoUno                       000001E8
ComenzamosAEmitir                 00000238
ContadorEmisor                    0000000E
ContadorEnvio                     0000000D
ContadorReceptor                  0000000F
DC                                00000001
DRecibido                         00000268
DatosRecibido                     00000010
Dormir                            00000008
DormirFin                         0000000A
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
ENVIO                             0000000C
Elegir                            000001FD
ElegirEsCero                      00000210
ElegirFIN                         0000022C
ElegirNoEsCero                    000001FF
Emitir                            0000022D
EmitirFIN                         00000245
EnviarCero                        00000241
EnviarUno                         0000023C
ErrorHayDosEmisores               00000220
ErrorHayDosReceptores             00000226
F                                 00000001
FSR                               00000004
FinReceptor                       0000027F
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Inicio                            00000000
LCD_2Lineas4Bits5x7               00000120
LCD_ApuntaCaracter                00000018
LCD_Auxiliar1                     00000016
LCD_Auxiliar2                     00000017
LCD_Borra                         0000011E
LCD_BusDatos                      PORTB
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

LCD_Byte                          00000150
LCD_ByteCompleto                  00000157
LCD_Caracter                      00000123
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   0000012D
LCD_CursorIncr                    0000010E
LCD_CursorOFF                     0000011C
LCD_CursorON                      0000011A
LCD_CursorPosicion                0000001A
LCD_Dato                          00000013
LCD_DosEspaciosBlancos            00000147
LCD_EnheMayuscula                 00000134
LCD_EnheMinuscula                 0000012E
LCD_Envia                         00000125
LCD_EnviaBlancos                  0000014A
LCD_EnviaByteLetra                00000163
LCD_EnviaComando                  00000121
LCD_EnviaOtroBlanco               0000014B
LCD_EsFinalLinea                  0000017E
LCD_EscribeLCD                    000000FA
LCD_FinCGROM                      00000141
LCD_FinMensaje                    00000173
LCD_FinMovimiento                 0000018D
LCD_FinVisualizaDigito            00000165
LCD_Grado                         0000013B
LCD_GuardaDato                    00000014
LCD_GuardaTRISB                   00000015
LCD_Inicializa                    000000E2
LCD_Linea1                        00000110
LCD_Linea2                        00000112
LCD_LineaEnBlanco                 00000143
LCD_Mensaje                       00000166
LCD_MensajeMovimiento             00000174
LCD_Nibble                        0000015B
LCD_NoEsFinalLinea                00000183
LCD_NoUltimoCaracter              00000170
LCD_NoUltimoCaracter2             00000189
LCD_OFF                           00000118
LCD_PinEnable                     PORTA,2
LCD_PinRS                         PORTA,0
LCD_PinRW                         PORTA,1
LCD_PosicionLinea1                00000114
LCD_PosicionLinea2                00000116
LCD_PrimeraPosicion               00000178
LCD_TresEspaciosBlancos           00000149
LCD_UnEspacioBlanco               00000145
LCD_ValorCaracter                 00000019
LCD_VisualizaAlto                 00000158
LCD_VisualizaBajo                 0000015A
LCD_VisualizaCaracter             0000017A
LCD_VisualizaOtroCaracter         0000016A
LucesContinua                     000002C2
LucesInicio                       000002BF
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

MensDatosEnv                      00000074
Mensaje0                          00000034
Mensaje1                          0000003F
MensajeBStop                      0000009A
MensajeBienvenida                 00000018
MensajeBitStart                   00000090
MensajeDatCargado                 00000048
MensajeElige                      00000025
MensajeEmisorEncontrado           000000C4
MensajeEmitiendo                  00000057
MensajeErrorHayDosEmisores        000000A4
MensajeErrorHayDosReceptores      000000B4
MensajeReceptorEncontrado         000000D2
MensajeRecibiendo                 00000065
Mensajes                          00000017
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PintarEnLeds                      00000283
Presentacion                      0000000C
Principal                         00000006
PuertaEnviar                      PORTB,1
PuertaRecibir                     PORTB,0
Pulsador                          PORTA,4
R1Decima_BucleExterno             000001CB
R1Decima_BucleExterno2            000001C9
R1Decima_BucleInterno             000001CD
R1ms_BucleExterno                 000001B5
R1ms_BucleInterno                 000001B7
RB0_0                             000002BD
RB0_1                             000002BB
RB0_Continua                      000002B7
RB1_0                             000002B6
RB1_1                             000002B4
RB1_Continua                      000002B0
RB2_0                             000002AF
RB2_1                             000002AD
RB2_Continua                      000002A9
RB3_0                             000002A8
RB3_1                             000002A6
RB3_Continua                      000002A2
RB4_0                             000002A1
RB4_1                             0000029F
RB4_Continua                      0000029B
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

RB5_0                             0000029A
RB5_1                             00000298
RB5_Continua                      00000294
RB6_0                             00000293
RB6_1                             00000291
RB6_Continua                      0000028D
RB7_0                             0000028C
RB7_1                             0000028A
RBIE                              00000003
RBIF                              00000000
RB_Fin                            000002BE
RD                                00000000
RP0                               00000005
RP1                               00000006
R_ContA                           0000001B
R_ContB                           0000001C
R_ContC                           0000001D
RecCero                           00000273
RecCorrect                        00000083
RecUno                            0000026B
Recibir                           0000024C
RetardoMicros                     000001A1
Retardo_100micros                 0000019B
Retardo_100ms                     000001A7
Retardo_10micros                  0000018E
Retardo_10ms                      000001AD
Retardo_10s                       000001BF
Retardo_1Decima                   000001C8
Retardo_1ms                       000001B3
Retardo_1s                        000001C5
Retardo_200micros                 00000198
Retardo_200ms                     000001A5
Retardo_20micros                  000001A0
Retardo_20ms                      000001AB
Retardo_20s                       000001BD
Retardo_2ms                       000001B1
Retardo_2s                        000001C3
Retardo_4micros                   00000194
Retardo_500micros                 00000195
Retardo_500ms                     000001C7
Retardo_50micros                  0000019D
Retardo_50ms                      000001A9
Retardo_5micros                   00000193
Retardo_5ms                       000001AF
Retardo_5s                        000001C1
Retardos_ms                       000001B4
Rmicros_Bucle                     000001A2
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
MPASM  5.20                     PLANTILLA.ASM   6-3-2008  2:33:49         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

TRISA                             00000085
TRISB                             00000086
TablaLongitud                     00000011
TablaPosicion                     00000012
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001
__DEBUG                           1


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXX-----
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   827
Program Memory Words Free:   197


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    10 reported,     0 suppressed

