MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; ** PLANTILLA.ASM ************************************************
                      00002 ; **               Francisco Javier Merchán Macías               **
                      00003 ; **                     Fatima Romero Romero                    **
                      00004 ; **                     Esmeralda Rubio Parra                   **
                      00005 ; **                       I.T.T.Telemática                      **
                      00006 ; *****************************************************************
                      00007 ; ** Descripción práctica:                                       **
                      00008 ; **                                                 .           **
                      00009 ; **   Emisor y receptor.                                        **
                      00010 ; **                                                             **
                      00011 ; **                                                             **
                      00012 ; **                                                             **
                      00013 ; *****************************************************************
                      00014 
                      00015 ; ZONA DE DATOS **********************************************************************
                      00016 
2007   3FF1           00017         __CONFIG _CP_OFF& _WDT_OFF&_PWRTE_ON&_XT_OSC    ; Configuración para el grabador
                      00018 
                      00019         LIST P=16F84A                                   ; Indica el tipo de mC utilizado.
                      00020         INCLUDE <P16F84A.INC>                   ; Incluye las definiciones de registros y constantes aso
                            ciadas a este mC.
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00021 
                      00022         CBLOCK 0x0C                     ;La zona de memoria de usuario comienza en esta dirección de mem
                            oria RAM de datos
  0000000C            00023         ENVIO
  0000000D            00024         ContadorEnvio
  0000000E            00025         ContadorEmisor          ;Contador para ENVIO.INC
  0000000F            00026         ContadorReceptor        ;Contador para RECIBIR.INC
  00000010            00027         DatosRecibido           ;Para guardar el dato en RECIBIR.INC
                      00028         ENDC
                      00029 
                      00030 ;   CONSTANTES ****************************************************
                      00031         #DEFINE Pulsador                PORTA,4
                      00032         #DEFINE PuertaEnviar    PORTB,1
                      00033         #DEFINE PuertaRecibir   PORTB,0
                      00034 
                      00035 ;ZONA DE CODIGO **********************************************************************
0000                  00036         ORG 0
                      00037 
0000                  00038 Inicio
                      00039 ;   CONFIGURACIÓN DE ENTRADAS Y SALIDAS ***************************
0000   1683           00040         bsf             STATUS, RP0                     ;Acceso al banco 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0001   1086           00041         bcf             TRISB,1         ;RB1 como salida. (PUERTA DE ENVIO DE DATOS)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0002   1406           00042         bsf             TRISB,0         ;RB0 como entrada. (PUERTA DE RECEPCION DE DATOS)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0003   1585           00043         bsf             TRISA,3         ;RA3 como entrada (INTERRUPTOR)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0004   1605           00044         bsf             TRISA,4         ;RA3 como entrada (INTERRUPTOR)
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005   1283           00045         bcf     STATUS, RP0                     ;Acceso al banco 0
                      00046 
                      00047 ;Aquí empieza el programa en sí...
0006                  00048 Principal
0006   200A           00049         call    Presentacion
0007   21BC           00050         call    Elegir
0008                  00051 Dormir
0008   0063           00052         sleep
0009   2808           00053         goto    Dormir
                      00054 
                      00055 ;-----------INICIO Instrucciones para el inicio y presentacion---------------------------------------
000A                  00056 Presentacion
000A   20A1           00057         call    LCD_Inicializa
000B   20DD           00058         call    LCD_Borra
000C   3016           00059         movlw   MensajeBienvenida
000D   2125           00060         call    LCD_Mensaje
000E   2182           00061         call    Retardo_2s
000F   3040           00062         movlw   0x40
0010   20D3           00063         call    LCD_PosicionLinea1
0011   3023           00064         movlw   MensajeElige
0012   2125           00065         call    LCD_Mensaje
0013   2182           00066         call    Retardo_2s
0014   0008           00067         return
                      00068 ;-----------FIN Instrucciones para el inicio y presentacion---------------------------------------
                      00069 
                      00070 ; Mensajes ----------------------------------------
0015                  00071 Mensajes
0015   0782           00072         addwf   PCL,F
0016                  00073 MensajeBienvenida                               ;En subrutina Presentacion de PLANTILLA.ASM
0016   3450 3472 3461 00074         DT "Practica SED", 0x00
       3463 3474 3469 
       3463 3461 3420 
       3453 3445 3444 
       3400 
0023                  00075 MensajeElige                                    ;En subrutina Presentacion de PLANTILLA.ASM
0023   3445 346C 3469 00076         DT "Elige TX o RX:", 0x00
       3467 3465 3420 
       3454 3458 3420 
       346F 3420 3452 
       3458 343A 3400 
0032                  00077 Mensaje0                                                ;En subrutina de ELIGIR.INC
0032   3430 343D 3452 00078         DT "0=Recept", 0x00
       3465 3463 3465 
       3470 3474 3400 
003B                  00079 Mensaje1                                                ;En subrutina de ELIGIR.INC
003B   3431 343D 3445 00080         DT "1=Emisor", 0x00
       346D 3469 3473 
       346F 3472 3400 
0044                  00081 MensajeDatCargado                               ;En subrutina de CARGANDO.INC
0044   3444 3461 3474 00082         DT "Datos Cargados", 0x00
       346F 3473 3420 
       3443 3461 3472 
       3467 3461 3464 
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       346F 3473 3400 
0053                  00083 MensajeEmitiendo                                ;En subrutina de EMITIR.INC
0053   3445 344D 3449 00084         DT "EMITIENDO RB1", 0x00
       3454 3449 3445 
       344E 3444 344F 
       3420 3452 3442 
       3431 3400 
0061                  00085 MensajeRecibiendo                               ;En subrutina de RECIBIR.INC
0061   3452 3445 3443 00086         DT "RECIBIENDO RB0", 0x00
       3449 3442 3449 
       3445 344E 3444 
       344F 3420 3452 
       3442 3430 3400 
0070                  00087 MensDatosEnv                                    ;En subrutina de EMITIR.INC
0070   3444 3461 3474 00088         DT "Datos ENVIADOS", 0x00
       346F 3473 3420 
       3445 344E 3456 
       3449 3441 3444 
       344F 3453 3400 
007F                  00089 RecCorrect                                              ;En subrutina de RECIBIR.INC
007F   3452 3445 3443 00090         DT "RECEPCCION OK", 0x00
       3445 3450 3443 
       3443 3449 344F 
       344E 3420 344F 
       344B 3400 
008D                  00091 MensajeBitStart                                 ;En subrutina de RECIBIR.INC
008D   3442 3469 3474 00092         DT "Bit Start", 0x00
       3420 3453 3474 
       3461 3472 3474 
       3400 
0097                  00093 MensajeBStop                                    ;En subrutina de RECIBIR.INC
0097   3442 3469 3474 00094         DT "Bit Stop ", 0x00
       3420 3453 3474 
       346F 3470 3420 
       3400 
                      00095 
                      00096         INCLUDE <LCD_4BIT.INC>
                      00001 ;       ===================================================================
                      00002 ;
                      00003 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00004 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00005 ;
                      00006 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00007 ; conexiones son:
                      00008 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00009 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00010 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00011 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00012 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00013 ;
                      00014 ; Se utilizan las subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00015 ;
                      00016 ; ZONA DE DATOS *********************************************************************
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017 
                      00018         CBLOCK
  00000011            00019         LCD_Dato
  00000012            00020         LCD_GuardaDato
  00000013            00021         LCD_GuardaTRISB
  00000014            00022         LCD_Auxiliar1
  00000015            00023         LCD_Auxiliar2
                      00024         ENDC
                      00025 
  00000010            00026 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00027 
                      00028 #DEFINE  LCD_PinRS      PORTA,0
                      00029 #DEFINE  LCD_PinRW      PORTA,1
                      00030 #DEFINE  LCD_PinEnable  PORTA,2
                      00031 #DEFINE  LCD_BusDatos   PORTB
                      00032 
                      00033 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00034 ;
                      00035 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
                      00036 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
                      00037 ; configuración inicial hay que hacerla como sigue:
                      00038 ;
00A1                  00039 LCD_Inicializa
00A1   1683           00040         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
00A2   1005           00041         bcf     LCD_PinRS               ; R/W y E.
00A3   1105           00042         bcf     LCD_PinEnable
00A4   1085           00043         bcf     LCD_PinRW
00A5   1283           00044         bcf     STATUS,RP0
00A6   1085           00045         bcf     LCD_PinRW               ; En caso de que esté conectado le indica
                      00046                                         ; que se va a escribir en el LCD.
00A7   1105           00047         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD poniendo E=0.
00A8   1005           00048         bcf     LCD_PinRS               ; Activa el Modo Comando poniendo RS=0.
00A9   216A           00049         call    Retardo_20ms
00AA   3030           00050         movlw   b'00110000'     
00AB   20B9           00051         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
00AC   216E           00052         call    Retardo_5ms     
00AD   3030           00053         movlw   b'00110000'     
00AE   20B9           00054         call    LCD_EscribeLCD
00AF   2157           00055         call    Retardo_200micros
00B0   3030           00056         movlw   b'00110000'     
00B1   20B9           00057         call    LCD_EscribeLCD
00B2   3020           00058         movlw   b'00100000'             ; Interface de 4 bits.
00B3   20B9           00059         call    LCD_EscribeLCD
                      00060 
                      00061 ; Ahora configura el resto de los parámetros: 
                      00062 
00B4   20DF           00063         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
00B5   20DD           00064         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
00B6   20DB           00065         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
00B7   20CD           00066         call    LCD_CursorIncr          ; Cursor en modo incrementar.
00B8   0008           00067         return
                      00068 
                      00069 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070 ;
                      00071 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el pin
                      00072 ; Enable del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B que
                      00073 ; no son utilizadas para el LCD (pines RB3:RB0), primero se lee estas líneas y después se
                      00074 ; vuelve a enviar este dato sin cambiarlo.
                      00075 
00B9                  00076 LCD_EscribeLCD
00B9   39F0           00077         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
00BA   0091           00078         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
00BB   0806           00079         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
00BC   390F           00080         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
00BD   0491           00081         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
                      00082                                         ; y en la parte baja lo que había antes.
00BE   1683           00083         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BF   0806           00084         movf    TRISB,W         ; Guarda la configuración que tenía antes TRISB.
00C0   0093           00085         movwf   LCD_GuardaTRISB
00C1   300F           00086         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
00C2   0586           00087         andwf   PORTB,F                 ; como estaban y las 4 superiores como salida.
00C3   1283           00088         bcf     STATUS,RP0              ; Acceso al Banco 0.
                      00089 ;
00C4   0811           00090         movf    LCD_Dato,W              ; Recupera el dato a enviar.
00C5   0086           00091         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
00C6   1505           00092         bsf     LCD_PinEnable           ; Permite funcionamiento del LCD mediante un pequeño
00C7   1105           00093         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
00C8   1683           00094         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
00C9   0813           00095         movf    LCD_GuardaTRISB,W       ; la configuración del Puerto B.
00CA   0086           00096         movwf   PORTB                   ; Realmente es TRISB.
00CB   1283           00097         bcf     STATUS,RP0              ; Acceso al Banco 0.
00CC   0008           00098         return
                      00099 
                      00100 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00101 ;
                      00102 ;Los comandos que pueden ser ejecutados son:
                      00103 ;
00CD                  00104 LCD_CursorIncr                          ; Cursor en modo incrementar.
00CD   3006           00105         movlw   b'00000110'
00CE   28E0           00106         goto    LCD_EnviaComando
00CF                  00107 LCD_Linea1                              ; Cursor al principio de la Línea 1.
00CF   3080           00108         movlw   b'10000000'             ; Dirección 00h de la DDRAM
00D0   28E0           00109         goto    LCD_EnviaComando
00D1                  00110 LCD_Linea2                              ; Cursor al principio de la Línea 2.
00D1   30C0           00111         movlw   b'11000000'             ; Dirección 40h de la DDRAM
00D2   28E0           00112         goto    LCD_EnviaComando
00D3                  00113 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
00D3   3880           00114         iorlw   b'10000000'             ; dirección 80h de la DDRAM más el valor del
00D4   28E0           00115         goto    LCD_EnviaComando        ; registro W.
00D5                  00116 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
00D5   38C0           00117         iorlw   b'11000000'             ; dirección C0h de la DDRAM más el valor del
00D6   28E0           00118         goto    LCD_EnviaComando        ; registro W.
00D7                  00119 LCD_OFF                         ; Pantalla apagada.
00D7   3008           00120         movlw   b'00001000'
00D8   28E0           00121         goto    LCD_EnviaComando
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D9                  00122 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
00D9   300E           00123         movlw   b'00001110'
00DA   28E0           00124         goto    LCD_EnviaComando
00DB                  00125 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
00DB   300C           00126         movlw   b'00001100'
00DC   28E0           00127         goto    LCD_EnviaComando
00DD                  00128 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
00DD   3001           00129         movlw   b'00000001'             ; cursor a principio de la línea 1.
00DE   28E0           00130         goto    LCD_EnviaComando
00DF                  00131 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
00DF   3028           00132         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
                      00133 ;       goto    LCD_EnviaComando        ; 4 bits. 
                      00134 
                      00135 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00136 ;
                      00137 ; "LCD_EnviaComando". Escribe un comando en el registro del módulo LCD. La palabra de
                      00138 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
                      00139 ; "LCD_Caracter". Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00140 ; a través del registro W. Trabaja en Modo Dato.
                      00141 ;
00E0                  00142 LCD_EnviaComando
00E0   1005           00143         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
00E1   28E4           00144         goto    LCD_Envia
00E2                  00145 LCD_Caracter
00E2   1405           00146         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
00E3   20EC           00147         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
00E4                  00148 LCD_Envia
00E4   0092           00149         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
00E5   20B9           00150         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
00E6   0E12           00151         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
                      00152                                         ; nibble bajo del dato a enviar a parte alta del byte.
00E7   20B9           00153         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
00E8   1C05           00154         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
00E9   2170           00155         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
00EA   215C           00156         call    Retardo_50micros
00EB   0008           00157         return  
                      00158 
                      00159 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00160 ;
                      00161 ; A partir del carácter ASCII número 127 los códigos de los caracteres definidos en la
                      00162 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00163 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00164 ;
                      00165 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00166 ; que puedan ser visualizado en el módulo LM016L.
                      00167 ; 
                      00168 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00169 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00170 
00EC                  00171 LCD_CodigoCGROM
00EC   0091           00172         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
00ED                  00173 LCD_EnheMinuscula                       ; un carácter especial.
00ED   3CF1           00174         sublw   'ñ'                     ; ¿Es la "ñ"?
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EE   1D03           00175         btfss   STATUS,Z
00EF   28F3           00176         goto    LCD_EnheMayuscula       ; No es "ñ".
00F0   30EE           00177         movlw   b'11101110'             ; Código CGROM de la "ñ".
00F1   0091           00178         movwf   LCD_Dato
00F2   2900           00179         goto    LCD_FinCGROM
00F3                  00180 LCD_EnheMayuscula
00F3   0811           00181         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
00F4   3CD1           00182         sublw   'Ñ'                     ; ¿Es la "Ñ"?
00F5   1D03           00183         btfss   STATUS,Z
00F6   28FA           00184         goto    LCD_Grado               ; No es "Ñ".
00F7   30EE           00185         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
00F8   0091           00186         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
00F9   2900           00187         goto    LCD_FinCGROM    
00FA                  00188 LCD_Grado
00FA   0811           00189         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
00FB   3CBA           00190         sublw   'º'                     ; ¿Es el símbolo "º"?
00FC   1D03           00191         btfss   STATUS,Z
00FD   2900           00192         goto    LCD_FinCGROM            ; No es "º".
00FE   30DF           00193         movlw   b'11011111'             ; Código CGROM del símbolo "º".
00FF   0091           00194         movwf   LCD_Dato
0100                  00195 LCD_FinCGROM
0100   0811           00196         movf    LCD_Dato,W              ; En (W) el código buscado.
0101   0008           00197         return
                      00198 
                      00199 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00200 ;
                      00201 ; Visualiza espacios en blanco.
                      00202 
0102                  00203 LCD_LineaEnBlanco
0102   3010           00204         movlw   LCD_CaracteresPorLinea
0103   2909           00205         goto    LCD_EnviaBlancos
0104                  00206 LCD_UnEspacioBlanco
0104   3001           00207         movlw   .1
0105   2909           00208         goto    LCD_EnviaBlancos
0106                  00209 LCD_DosEspaciosBlancos
0106   3002           00210         movlw   .2
0107   2909           00211         goto    LCD_EnviaBlancos
0108                  00212 LCD_TresEspaciosBlancos
0108   3003           00213         movlw   .3
0109                  00214 LCD_EnviaBlancos
0109   0094           00215         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
010A                  00216 LCD_EnviaOtroBlanco     
010A   3020           00217         movlw   ' '                     ; Esto es un espacio en blanco.
010B   20E2           00218         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
010C   0B94           00219         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
010D   290A           00220         goto    LCD_EnviaOtroBlanco
010E   0008           00221         return
                      00222 
                      00223 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00224 ;
                      00225 ; Subrutina "LCD_ByteCompleto", visualiza el byte que almacena el registro W en el
                      00226 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00227 ;
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00228 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero 
                      00229 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00230 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00231 ;
                      00232 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00233 ;
010F                  00234 LCD_Byte
010F   0095           00235         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
0110   39F0           00236         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
0111   1D03           00237         btfss   STATUS,Z                ; Si es cero lo apaga.
0112   2917           00238         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
0113   3020           00239         movlw   ' '                     ; Visualiza un espacio en blanco.
0114   20E2           00240         call    LCD_Caracter
0115   2919           00241         goto    LCD_VisualizaBajo
                      00242 
0116                  00243 LCD_ByteCompleto
0116   0095           00244         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
0117                  00245 LCD_VisualizaAlto
0117   0E15           00246         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
0118   211A           00247         call    LCD_Nibble              ; Lo visualiza.
0119                  00248 LCD_VisualizaBajo
0119   0815           00249         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00250 ;       call    LCD_Nibble              ; Lo visualiza.
                      00251 ;       return
                      00252 
                      00253 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00254 ;
                      00255 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00256 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00257 ; - Si (W)=b'01010110', se visualizará "6". 
                      00258 ; - Si (W)=b'10101110', se visualizará "E". 
                      00259 ;
011A                  00260 LCD_Nibble
011A   390F           00261         andlw   b'00001111'             ; Se queda con la parte baja.
011B   0094           00262         movwf   LCD_Auxiliar1           ; Lo guarda.
011C   3C09           00263         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
011D   1C03           00264         btfss   STATUS,C        
011E   2922           00265         goto    LCD_EnviaByteLetra
011F   0814           00266         movf    LCD_Auxiliar1,W
0120   3E30           00267         addlw   '0'                     ; El número se pasa a carácter ASCII sumándole
0121   2924           00268         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
0122                  00269 LCD_EnviaByteLetra
0122   0814           00270         movf    LCD_Auxiliar1,W
0123   3E37           00271         addlw   'A'-0x0A                        ; Sí, por tanto, se le suma el ASCII de la 'A'.
0124                  00272 LCD_FinVisualizaDigito
0124   28E2           00273         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00274                                         ; para no sobrecargar la pila.
                      00097         INCLUDE <LCD_MENS.INC>
                      00001 
                      00002 ; Librería de subrutinas para el manejo de mensajes a visualizar en un visualizador LCD.
                      00003 
                      00004         CBLOCK
  00000016            00005         LCD_ApuntaCaracter              ; Indica la posición del carácter a visualizar
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00006                                         ; respecto del comienzo de todos los mensajes,
                      00007                                         ; (posición de la etiqueta "Mensajes").
  00000017            00008         LCD_ValorCaracter                       ; Código ASCII del carácter a 
                      00009         ENDC                            ; visualizar.
                      00010 
                      00011 ; Los mensajes tienen que estar situados dentro de las 256 primeras posiciones de la 
                      00012 ; memoria de programa, es decir, no pueden superar la dirección 0FFh.
                      00013 
                      00014 ; Subrutina "LCD_Mensaje" ---------------------------------------------------------------
                      00015 ;
                      00016 ; Visualiza por pantalla el mensaje apuntado por el registro W.
                      00017 ;
                      00018 ; Los mensajes deben localizarse dentro de una zona encabezada por la etiqueta "Mensajes" y que
                      00019 ; tenga la siguiente estructura:
                      00020 ;
                      00021 ; Mensajes                              ; ¡Etiqueta obligatoria!
                      00022 ;       addwf   PCL,F
                      00023 ; Mensaje0                              ; Posición inicial del mensaje.
                      00024 ;       DT ".. ..", 0x00                        ; Mensaje terminado en 0x00.
                      00025 ; Mensaje1
                      00026 ;       ...     
                      00027 ;       ...
                      00028 ; FinMensajes
                      00029 ;
                      00030 ; La llamada a esta subrutina se realizará siguiendo este ejemplo:
                      00031 ;
                      00032 ;       movlw   Mensaje0                        ; Carga la posición del mensaje.
                      00033 ;       call    LCD_Mensaje             ; Visualiza el mensaje.
                      00034 ;
0125                  00035 LCD_Mensaje
0125   0096           00036         movwf   LCD_ApuntaCaracter      ; Posición del primer carácter del mensaje.
0126   3015           00037         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
0127   0296           00038         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de etiqueta "Mensajes".
0128   0396           00039         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
0129                  00040 LCD_VisualizaOtroCaracter
0129   0816           00041         movf    LCD_ApuntaCaracter,W
012A   2015           00042         call    Mensajes                        ; Obtiene el código ASCII del carácter apuntado.
012B   0097           00043         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
012C   0897           00044         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
012D   1903           00045         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
012E   2932           00046         goto    LCD_FinMensaje          ; de mensaje, sale fuera.
012F                  00047 LCD_NoUltimoCaracter
012F   20E2           00048         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
0130   0A96           00049         incf    LCD_ApuntaCaracter,F    ; Apunta a la posición del siguiente carácter 
0131   2929           00050         goto    LCD_VisualizaOtroCaracter       ; dentro del mensaje.
0132                  00051 LCD_FinMensaje
0132   0008           00052         return                          ; Vuelve al programa principal.
                      00053 
                      00054 ; Subrutina "LCD_MensajeMovimiento" -----------------------------------------------------
                      00055 ;
                      00056 ; Visualiza un mensaje de mayor longitud que los 16 caracteres que pueden representarse
                      00057 ; en una línea, por tanto se desplaza a través de la pantalla.
                      00058 ;
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00059 ; En el mensaje debe dejarse 16 espacios en blanco, al principio y al final para
                      00060 ; conseguir que el desplazamiento del mensaje sea lo más legible posible.
                      00061 ;
                      00062         CBLOCK  
  00000018            00063         LCD_CursorPosicion              ; Contabiliza la posición del cursor dentro de la
                      00064         ENDC                            ; pantalla LCD
                      00065 
0133                  00066 LCD_MensajeMovimiento
0133   0096           00067         movwf   LCD_ApuntaCaracter      ; Posición del primer carácter del mensaje.
0134   3015           00068         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
0135   0296           00069         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de la etiqueta "Mensajes".
0136   0396           00070         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
0137                  00071 LCD_PrimeraPosicion
0137   0198           00072         clrf    LCD_CursorPosicion      ; El cursor en la posición 0 de la línea.
0138   20DD           00073         call    LCD_Borra               ; Se sitúa en la primera posición de la línea 1 y
0139                  00074 LCD_VisualizaCaracter                   ; borra la pantalla.
0139   3010           00075         movlw   LCD_CaracteresPorLinea  ; ¿Ha llegado a final de línea?
013A   0218           00076         subwf   LCD_CursorPosicion,W
013B   1D03           00077         btfss   STATUS,Z
013C   2942           00078         goto    LCD_NoEsFinalLinea
                      00079 
013D                  00080 LCD_EsFinalLinea
013D   2164           00081         call    Retardo_200ms           ; Lo mantiene visualizado durante este tiempo.
013E   2164           00082         call    Retardo_200ms
013F   300F           00083         movlw   LCD_CaracteresPorLinea-1; Apunta a la posición del segundo carácter visualizado
0140   0296           00084         subwf   LCD_ApuntaCaracter,F    ; en pantalla, que será el primero en la siguiente
0141   2937           00085         goto    LCD_PrimeraPosicion      ; visualización de línea, para producir el efecto
0142                  00086 LCD_NoEsFinalLinea                      ; de desplazamiento hacia la izquierda.
0142   0816           00087         movf    LCD_ApuntaCaracter,W
0143   2015           00088         call    Mensajes                        ; Obtiene el ASCII del carácter apuntado.
0144   0097           00089         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
0145   0897           00090         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
0146   1903           00091         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
0147   294C           00092         goto    LCD_FinMovimiento       ; de mensaje, sale fuera.
0148                  00093 LCD_NoUltimoCaracter2
0148   20E2           00094         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
0149   0A98           00095         incf    LCD_CursorPosicion,F    ; Contabiliza el incremento de posición del 
                      00096                                         ; cursor en la pantalla.
014A   0A96           00097         incf    LCD_ApuntaCaracter,F    ; Apunta a la siguiente posición por visualizar.
014B   2939           00098         goto    LCD_VisualizaCaracter   ; Vuelve a visualizar el siguiente carácter
014C                  00099 LCD_FinMovimiento                       ; de la línea.
014C   0008           00100         return                          ; Vuelve al programa principal.
                      00101         
                      00102 
                      00098         INCLUDE <RETARDOS.INC>
                      00001 ;       ===================================================================
                      00002 ;
                      00003 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00004 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00005 ;
                      00006 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00007 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
                      00008 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00009 ;
                      00010 ; En los comentarios, "cm" significa "ciclos máquina".
                      00011 ;
                      00012 ; ZONA DE DATOS *********************************************************************
                      00013 
                      00014         CBLOCK
  00000019            00015         R_ContA                         ; Contadores para los retardos.
  0000001A            00016         R_ContB
  0000001B            00017         R_ContC
                      00018         ENDC
                      00019 ;
                      00020 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00021 ;
                      00022 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00023 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00024 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
                      00025 ;
014D                  00026 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
014D   0000           00027         nop                             ; Aporta 1 ciclo máquina.
014E   0000           00028         nop                             ; Aporta 1 ciclo máquina.
014F   0000           00029         nop                             ; Aporta 1 ciclo máquina.
0150   0000           00030         nop                             ; Aporta 1 ciclo máquina.
0151   0000           00031         nop                             ; Aporta 1 ciclo máquina.
0152                  00032 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
0152   0000           00033         nop                             ; Aporta 1 ciclo máquina.
0153                  00034 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
0153   0008           00035         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00036 ;
                      00037 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00038 ;
0154                  00039 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
0154   0000           00040         nop                             ; Aporta 1 ciclo máquina.
0155   30A4           00041         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
0156   2960           00042         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0157                  00043 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
0157   0000           00044         nop                             ; Aporta 1 ciclo máquina.
0158   3040           00045         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
0159   2960           00046         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
015A                  00047 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
015A   301F           00048         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
015B   2960           00049         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
015C                  00050 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
015C   0000           00051         nop                             ; Aporta 1 ciclo máquina.
015D   300E           00052         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
015E   2960           00053         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
015F                  00054 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
015F   3005           00055         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
                      00056 ;
                      00057 ; El próximo bloque "RetardoMicros" tarda:
                      00058 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
                      00059 ;
0160                  00060 RetardoMicros
0160   0099           00061         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0161                  00062 Rmicros_Bucle
0161   0B99           00063         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0162   2961           00064         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
0163   0008           00065         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00066 ;
                      00067 ;En total estas subrutinas tardan:
                      00068 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00069 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00070 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00071 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00072 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00073 ;
                      00074 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00075 ;
0164                  00076 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
0164   30C8           00077         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0165   2973           00078         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0166                  00079 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
0166   3064           00080         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0167   2973           00081         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0168                  00082 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
0168   3032           00083         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
0169   2973           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
016A                  00085 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
016A   3014           00086         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
016B   2973           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
016C                  00088 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
016C   300A           00089         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
016D   2973           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
016E                  00091 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
016E   3005           00092         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
016F   2973           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0170                  00094 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
0170   3002           00095         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
0171   2973           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0172                  00097 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
0172   3001           00098         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00099 ;
                      00100 ; El próximo bloque "Retardos_ms" tarda:
                      00101 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00102 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00103 ; que a 4 MHz son 1002 µs = 1 ms.
                      00104 ;
0173                  00105 Retardos_ms
0173   009A           00106         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
0174                  00107 R1ms_BucleExterno
0174   30F9           00108         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
0175   0099           00109         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
0176                  00110 R1ms_BucleInterno
0176   0000           00111         nop                             ; Aporta KxMx1 ciclos máquina.
0177   0B99           00112         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
0178   2976           00113         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
0179   0B9A           00114         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017A   2974           00115         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
017B   0008           00116         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00117 ;
                      00118 ;En total estas subrutinas tardan:
                      00119 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00120 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00121 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00122 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00123 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00124 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00125 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00126 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00127 ;
                      00128 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00129 ;
017C                  00130 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
017C   30C8           00131         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
017D   2987           00132         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
017E                  00133 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
017E   3064           00134         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
017F   2987           00135         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0180                  00136 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
0180   3032           00137         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0181   2987           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0182                  00139 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
0182   3014           00140         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0183   2987           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0184                  00142 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
0184   300A           00143         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0185   2987           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0186                  00145 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
0186   3005           00146         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00147 ;
                      00148 ; El próximo bloque "Retardo_1Decima" tarda:
                      00149 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00150 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00151 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00152 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00153 ;
0187                  00154 Retardo_1Decima
0187   009B           00155         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
0188                  00156 R1Decima_BucleExterno2
0188   3064           00157         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
0189   009A           00158         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
018A                  00159 R1Decima_BucleExterno
018A   30F9           00160         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
018B   0099           00161         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
018C                  00162 R1Decima_BucleInterno          
018C   0000           00163         nop                             ; Aporta KxMxNx1 ciclos máquina.
018D   0B99           00164         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
018E   298C           00165         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
018F   0B9A           00166         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
0190   298A           00167         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0191   0B9B           00168         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0192   2988           00169         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
0193   0008           00170         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00171 ;
                      00172 ;En total estas subrutinas tardan:
                      00173 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00174 ;                       (N=200, M=100 y K=249).
                      00175 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00176 ;                       (N=100, M=100 y K=249).
                      00177 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00178 ;                       (N= 50, M=100 y K=249).
                      00179 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00180 ;                       (N= 20, M=100 y K=249).
                      00181 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00182 ;                       (N= 10, M=100 y K=249).
                      00183 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00184 ;                       (N=  5, M=100 y K=249).
                      00099         INCLUDE <CARGANDO.INC>          ;Includes Propios
                      00001 ; ** CARGANDO.INC *************************************************
                      00002 ; **               Francisco Javier Merchán Macías               **
                      00003 ; **                     Fatima Romero Romero                    **
                      00004 ; **                     Esmeralda Rubio Parra                   **
                      00005 ; **                       I.T.T.Telemática                      **
                      00006 ; *****************************************************************
                      00007 ; ** Descripción:                                                **
                      00008 ; **                                                             **
                      00009 ; **   Libreria para cargar los datos a enviar                   **
                      00010 ; **                                                             **
                      00011 ; **                                                             **
                      00012 ; **                                                             **
                      00013 ; *****************************************************************
                      00014 
0194                  00015 Cargando
0194   2182           00016         call    Retardo_2s
0195   3008           00017         movlw   0x08
0196   008D           00018         movwf   ContadorEnvio                   ;Cargamos el contador con un 8
0197   018C           00019         clrf    ENVIO
0198   20A1           00020         call    LCD_Inicializa                  ;Hacemos un cuadro para meter los valores que carguemos.
0199   20DD           00021         call    LCD_Borra
019A   3003           00022         movlw   0x03
019B   20D3           00023         call    LCD_PosicionLinea1
019C   305B           00024         movlw   '['
019D   20E2           00025         call    LCD_Caracter
019E   300C           00026         movlw   0x0c
019F   20D3           00027         call    LCD_PosicionLinea1
01A0   305D           00028         movlw   ']'
01A1   20E2           00029         call    LCD_Caracter
01A2   3004           00030         movlw   0x04
01A3   20D3           00031         call    LCD_PosicionLinea1
                      00032 
01A4                  00033 CargandoInicio                                          ;Leemos el interruptor y lo cargamos en un regis
                            tro.
01A4   1A05           00034         btfsc   Pulsador
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A5   29A7           00035         goto    CargandoUno
01A6   29AF           00036         goto    CargandoCero
                      00037 
01A7                  00038 CargandoUno
01A7   1403           00039         bsf             STATUS,C
01A8   0C8C           00040         rrf             ENVIO,1
                      00041 ;   ESCRIBE UN 1 EN LA PANTALLA LCD
01A9   3031           00042         movlw   '1'
01AA   20E2           00043         call    LCD_Caracter
01AB   2182           00044         call    Retardo_2s
                      00045 ;   DECREMENTAMOS EL CONTADOR
01AC   0B8D           00046         decfsz  ContadorEnvio,1
01AD   29A4           00047         goto    CargandoInicio
01AE   29B6           00048         goto    CargandoFin
                      00049 
01AF                  00050 CargandoCero
01AF   1003           00051         bcf             STATUS,C
01B0   0C8C           00052         rrf             ENVIO,1
                      00053 ;   ESCRIBE UN 0 EN LA PANTALLA LCD
01B1   3030           00054         movlw   '0'
01B2   20E2           00055         call    LCD_Caracter
01B3   2182           00056         call    Retardo_2s
                      00057 ;   DECREMENTAMOS EL CONTADOR
01B4   0B8D           00058         decfsz  ContadorEnvio,1
01B5   29A4           00059         goto    CargandoInicio
01B6                  00060 CargandoFin
01B6   20DD           00061         call    LCD_Borra
01B7   20D1           00062         call    LCD_Linea2
01B8   3044           00063         movlw   MensajeDatCargado
01B9   2125           00064         call    LCD_Mensaje
01BA   2182           00065         call    Retardo_2s
                      00066 
01BB   0008           00067         return
                      00100         INCLUDE <ELEGIR.INC>
                      00001 ; ** ELEGIR.INC ***************************************************
                      00002 ; **               Francisco Javier Merchán Macías               **
                      00003 ; **                     Fatima Romero Romero                    **
                      00004 ; **                     Esmeralda Rubio Parra                   **
                      00005 ; **                       I.T.T.Telemática                      **
                      00006 ; *****************************************************************
                      00007 ; ** Descripción:                                                **
                      00008 ; **                                                             **
                      00009 ; **   Libreria para elegir si es emisor o receptor              **
                      00010 ; **                                                             **
                      00011 ; **                                                             **
                      00012 ; **                                                             **
                      00013 ; *****************************************************************
                      00014 
01BC                  00015 Elegir
01BC   1E05           00016         btfss   Pulsador                ;Si es 0 ejecuta la siguiente instrucción, si es 1 salta la inst
                            rucción
01BD   29C5           00017         goto    ElegirEsCero
                      00018 
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BE                  00019 ElegirNoEsCero                          ;Esto es el EMISOR
01BE   20DD           00020         call    LCD_Borra
01BF   303B           00021         movlw   Mensaje1
01C0   2125           00022         call    LCD_Mensaje
01C1   2182           00023         call    Retardo_2s
                      00024 
01C2   2194           00025         call    Cargando
01C3   21CC           00026         call    Emitir
                      00027 
01C4   29CB           00028         goto    ElegirFIN
                      00029 
01C5                  00030 ElegirEsCero                            ;Este es el RECEPTOR
01C5   20DD           00031         call    LCD_Borra
01C6   3032           00032         movlw   Mensaje0
01C7   2125           00033         call    LCD_Mensaje
01C8   2182           00034         call    Retardo_2s
                      00035 
01C9   21EB           00036         call    Recibir
01CA   29CB           00037         goto    ElegirFIN
                      00038 
01CB                  00039 ElegirFIN
01CB   0008           00040         return
                      00101         INCLUDE <EMITIR.INC>
                      00001 ; ** EMITIR.INC ***************************************************
                      00002 ; **               Francisco Javier Merchán Macías               **
                      00003 ; **                     Fatima Romero Romero                    **
                      00004 ; **                     Esmeralda Rubio Parra                   **
                      00005 ; **                       I.T.T.Telemática                      **
                      00006 ; *****************************************************************
                      00007 ; ** Descripción:                                                **
                      00008 ; **                                                             **
                      00009 ; **   Emitir                                                                                    **
                      00010 ; **                                                             **
                      00011 ; **       El registro que contiene los datos es ENVIO           **
                      00012 ; **  PuertaEnviar:  Emitimos por RB1                            **
                      00013 ; **  PuertaRecibir: Recibimos por RB2                           **
                      00014 ; *****************************************************************
                      00015 
01CC                  00016 Emitir
                      00017 ; Comprobamos si el receptor es un receptor o emisor, para evitar problemas de emisión
01CC   3008           00018         movlw   0x08
01CD   008E           00019         movwf   ContadorEmisor
                      00020 
                      00021 ; Empezamos a enviar el bit START
01CE   0103           00022         clrw                                            ;Ponemos mensaje EMITIENDO
01CF   20DD           00023         call    LCD_Borra
01D0   3053           00024         movlw   MensajeEmitiendo
01D1   2125           00025         call    LCD_Mensaje
01D2   2184           00026         call    Retardo_1s
                      00027 
                      00028 ;PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01D3   1406           00029         bsf             TRISB,0                         ;Ponemos a 1 las puertas de salida
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01D4   1486           00030         bsf             TRISB,1                         ;Ponemos a 1 las puertas de salida
                      00031 ;PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA
                      00032         
01D5   1086           00033         bcf             PuertaEnviar                            ;Enviamos un 0. BIT de START
01D6   2184           00034         call    Retardo_1s
                      00035 
                      00036 ; Emitimos la cadena almacenada
01D7                  00037 ComenzamosAEmitir
01D7   0C8C           00038         rrf             ENVIO,1
01D8   1803           00039         btfsc   STATUS,C
01D9   29DB           00040         goto    EnviarUno                       ;Envia un 1
01DA   29E0           00041         goto    EnviarCero                      ;Envia un 0
                      00042 
01DB                  00043 EnviarUno
01DB   1486           00044         bsf             PuertaEnviar
01DC   2184           00045         call    Retardo_1s
01DD   0B8E           00046         decfsz  ContadorEmisor,F
01DE   29D7           00047         goto    ComenzamosAEmitir
01DF   29E4           00048         goto    EmitirFIN
                      00049 
01E0                  00050 EnviarCero      
01E0   1086           00051         bcf             PuertaEnviar
                      00052 ;       call    Retardo_5s
01E1   2184           00053         call    Retardo_1s
01E2   0B8E           00054         decfsz  ContadorEmisor,F
01E3   29D7           00055         goto    ComenzamosAEmitir
                      00056 ;       goto    EmitirFIN                       ; No hace falta esta instrucción porque tenemos el codig
                            o debajo.
                      00057 
01E4                  00058 EmitirFIN
                      00059 ;Ponemos el BIT de STOP
01E4   1486           00060         bsf             PuertaEnviar
01E5   2182           00061         call    Retardo_2s
01E6   20DD           00062         call    LCD_Borra
01E7   3070           00063         movlw   MensDatosEnv
01E8   2125           00064         call    LCD_Mensaje
01E9   2182           00065         call    Retardo_2s
01EA   0008           00066         return
                      00102         INCLUDE <RECIBIR.INC>
                      00001 ; ** RECIBIR.INC **************************************************
                      00002 ; **               Francisco Javier Merchán Macías               **
                      00003 ; **                     Fatima Romero Romero                    **
                      00004 ; **                     Esmeralda Rubio Parra                   **
                      00005 ; **                       I.T.T.Telemática                      **
                      00006 ; *****************************************************************
                      00007 ; ** Descripción:                                                **
                      00008 ; **                                                             **
                      00009 ; **   Recibir                                                                                   **
                      00010 ; **                                                             **
                      00011 ; **                                                             **
                      00012 ; **  Emitimos por RA1                                           **
                      00013 ; **  Recibimos por RA0 (Para comprobar si el otro es emisor o no**
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00014 ; *****************************************************************
                      00015 
01EB                  00016 Recibir
01EB   0103           00017         clrw
01EC   3008           00018         movlw   0x08
01ED   008F           00019         movwf   ContadorReceptor                ;Cargamos el contador con un 8
                      00020 
01EE   0103           00021         clrw
01EF   20DD           00022         call    LCD_Borra
01F0   3061           00023         movlw   MensajeRecibiendo
01F1   2125           00024         call    LCD_Mensaje
01F2   2182           00025         call    Retardo_2s
                      00026 
                      00027 ;----------------PRUEBA-----------------------
                      00028 ;Comprobar
                      00029 ;       btfsc   PuertaRecibir
                      00030 ;       goto    RecibirUno
                      00031 ;       goto    RecibirCero
                      00032 
                      00033 ;RecibirUno
                      00034 ;       call    LCD_Borra
                      00035 ;       movlw   RecibimosUno
                      00036 ;       call    LCD_Mensaje
                      00037 ;       call    Retardo_100ms
                      00038 ;       goto    Comprobar
                      00039 
                      00040 ;RecibirCero
                      00041 ;       call    LCD_Borra
                      00042 ;       movlw   RecibimosCero
                      00043 ;       call    LCD_Mensaje
                      00044 ;       call    Retardo_100ms
                      00045 ;       goto    Comprobar
                      00046 ;---------------FIN PRUEBA--------------------
                      00047 
                      00048 ;Empezamos a Recibir el bit START
01F3                  00049 BitStart
                      00050 ;Ponemos a 1 las puertas para evitar Falsos Positivos
                      00051 ;PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01F3   1406           00052         bsf             TRISB,0                         ;Ponemos a 1 las puertas de salida
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01F4   1486           00053         bsf             TRISB,1                         ;Ponemos a 1 las puertas de salida
                      00054 ;PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA PRUEBA
                      00055 
01F5   1806           00056         btfsc   PuertaRecibir   ;COMPROBAMOS SI ES UN 0 (Bit de Start)
01F6   29F3           00057         goto    BitStart                ;Si es 1 vuelve a comprobar hasta que le llega un 0
                      00058                                                         ;Si es 0 POSIBLEMENTE tenemos el bit de Start y 
                            continuamos el codigo.
01F7   2164           00059         call    Retardo_200ms
01F8   2164           00060         call    Retardo_200ms
01F9   2166           00061         call    Retardo_100ms   ;Esperamos medio segundo para comprobar si es un 0 o no
01FA   1806           00062         btfsc   PuertaRecibir   ;VOLVEMOS A COMPROBAR QUE ES UN 0.
01FB   29F3           00063         goto    BitStart                ;No es el bit de Start, es un error.
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FC   20DD           00064         call    LCD_Borra               ;Si es el bit de Start lo muestra en pantalla
01FD   20CF           00065         call    LCD_Linea1
01FE   308D           00066         movlw   MensajeBitStart
01FF   2125           00067         call    LCD_Mensaje
0200   2164           00068         call    Retardo_200ms
0201   2164           00069         call    Retardo_200ms
0202   2166           00070         call    Retardo_100ms   ;Esperamos otro medio segundo
0203   2164           00071         call    Retardo_200ms   ;200ms más para no estar al comienzo del bit, sino un poco más al medio.
0204   20D1           00072         call    LCD_Linea2
                      00073 
0205                  00074 DRecibido                               ;SI ES EL BIT DE START (comenzamos a recibir)
0205   1806           00075         btfsc   PuertaRecibir
0206   2A08           00076         goto    RecUno
0207   2A10           00077         goto    RecCero
                      00078 
0208                  00079 RecUno
                      00080 ;   ESCRIBE UN 1 EN LA PANTALLA LCD
0208   3031           00081         movlw   '1'
0209   20E2           00082         call    LCD_Caracter
020A   2184           00083         call    Retardo_1s
                      00084 ;       GUARDAMOS LO QUE RECIBIMOS EN UN REGISTRO
020B   1403           00085         bsf             STATUS,C
020C   0C90           00086         rrf             DatosRecibido,1
                      00087 ;   DECREMENTAMOS EL CONTADOR
020D   0B8F           00088         decfsz  ContadorReceptor,1
020E   2A05           00089         goto    DRecibido                               ;Ir al inicio de DRecibido o lo que es lo mismo 
                            DatoRecibido
020F   2A17           00090         goto    BitStop
                      00091 
0210                  00092 RecCero
                      00093 ;   ESCRIBE UN 0 EN LA PANTALLA LCD
0210   3030           00094         movlw   '0'
0211   20E2           00095         call    LCD_Caracter
0212   2184           00096         call    Retardo_1s
                      00097 ;       GUARDAMOS LO QUE RECIBIMOS EN UN REGISTRO
0213   1003           00098         bcf             STATUS,C
0214   0C90           00099         rrf             DatosRecibido,1
                      00100 ;   DECREMENTAMOS EL CONTADOR
0215   0B8F           00101         decfsz  ContadorReceptor,1
0216   2A05           00102         goto    DRecibido                               ;Ir al inicio de DRecibido o lo que es lo mismo 
                            DatoRecibido
                      00103 
0217                  00104 BitStop
0217   2184           00105         call    Retardo_1s
0218   20CF           00106         call    LCD_Linea1
0219   3097           00107         movlw   MensajeBStop
021A   2125           00108         call    LCD_Mensaje
021B   2182           00109         call    Retardo_2s
                      00110 
021C                  00111 FinReceptor
021C   20DD           00112         call    LCD_Borra
021D   307F           00113         movlw   RecCorrect
021E   2125           00114         call    LCD_Mensaje
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021F   2182           00115         call    Retardo_2s
                      00116 
0220                  00117 PintarEnLeds
                      00118 ;       call    LCD_OFF                         ;Apagamos el LCD
                      00119 ;   CONFIGURACIÓN DE ENTRADAS Y SALIDAS ***************************
0220   1683           00120         bsf             STATUS, RP0                     ;Acceso al banco 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0221   0186           00121         clrf    TRISB                           ;Todas las líneas del Puerto B como salida
0222   1283           00122         bcf     STATUS, RP0                     ;Acceso al banco 0
                      00123 ;       FIN DE CONFIGURACIÓN DE LAS ENTRADAS Y SALIDAS
                      00124 
                      00125 ;       MOSTRAMOS EL DATO RECIBIDO EN LOS LEDs
0223   0C90           00126         rrf             DatosRecibido,1
0224   1803           00127         btfsc   STATUS,C
0225   2A27           00128         goto    RB7_1
0226   2A29           00129         goto    RB7_0
0227                  00130 RB7_1   
0227   1786           00131         bsf             PORTB,7
0228   2A2A           00132         goto    RB6_Continua
0229                  00133 RB7_0   
0229   1386           00134         bcf             PORTB,7
                      00135 
022A                  00136 RB6_Continua
022A   0C90           00137         rrf             DatosRecibido,1
022B   1803           00138         btfsc   STATUS,C
022C   2A2E           00139         goto    RB6_1
022D   2A30           00140         goto    RB6_0
022E                  00141 RB6_1
022E   1706           00142         bsf             PORTB,6
022F   2A31           00143         goto    RB5_Continua
0230                  00144 RB6_0   
0230   1306           00145         bcf             PORTB,6
                      00146 
0231                  00147 RB5_Continua
0231   0C90           00148         rrf             DatosRecibido,1
0232   1803           00149         btfsc   STATUS,C
0233   2A35           00150         goto    RB5_1
0234   2A37           00151         goto    RB5_0
0235                  00152 RB5_1
0235   1686           00153         bsf             PORTB,5
0236   2A38           00154         goto    RB4_Continua
0237                  00155 RB5_0   
0237   1286           00156         bcf             PORTB,5
                      00157 
0238                  00158 RB4_Continua
0238   0C90           00159         rrf             DatosRecibido,1
0239   1803           00160         btfsc   STATUS,C
023A   2A3C           00161         goto    RB4_1
023B   2A3E           00162         goto    RB4_0
023C                  00163 RB4_1
023C   1606           00164         bsf             PORTB,4
023D   2A3F           00165         goto    RB3_Continua
023E                  00166 RB4_0   
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

023E   1206           00167         bcf             PORTB,4
                      00168 
023F                  00169 RB3_Continua
023F   0C90           00170         rrf             DatosRecibido,1
0240   1803           00171         btfsc   STATUS,C
0241   2A43           00172         goto    RB3_1
0242   2A45           00173         goto    RB3_0
0243                  00174 RB3_1
0243   1586           00175         bsf             PORTB,3
0244   2A46           00176         goto    RB2_Continua
0245                  00177 RB3_0   
0245   1186           00178         bcf             PORTB,3
                      00179 
0246                  00180 RB2_Continua
0246   0C90           00181         rrf             DatosRecibido,1
0247   1803           00182         btfsc   STATUS,C
0248   2A4A           00183         goto    RB2_1
0249   2A4C           00184         goto    RB2_0
024A                  00185 RB2_1
024A   1506           00186         bsf             PORTB,2
024B   2A4D           00187         goto    RB1_Continua
024C                  00188 RB2_0   
024C   1106           00189         bcf             PORTB,2
                      00190 
024D                  00191 RB1_Continua
024D   0C90           00192         rrf             DatosRecibido,1
024E   1803           00193         btfsc   STATUS,C
024F   2A51           00194         goto    RB1_1
0250   2A53           00195         goto    RB1_0
0251                  00196 RB1_1
0251   1486           00197         bsf             PORTB,1
0252   2A54           00198         goto    RB0_Continua
0253                  00199 RB1_0   
0253   1086           00200         bcf             PORTB,1
                      00201 
0254                  00202 RB0_Continua
0254   0C90           00203         rrf             DatosRecibido,1
0255   1803           00204         btfsc   STATUS,C
0256   2A58           00205         goto    RB0_1
0257   2A5A           00206         goto    RB0_0
0258                  00207 RB0_1
0258   1406           00208         bsf             PORTB,0
0259   2A5B           00209         goto    RB_Fin
025A                  00210 RB0_0   
025A   1006           00211         bcf             PORTB,0
                      00212 
025B                  00213 RB_Fin
025B   0008           00214         return
                      00103 
                      00104         END
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

BitStart                          000001F3
BitStop                           00000217
C                                 00000000
Cargando                          00000194
CargandoCero                      000001AF
CargandoFin                       000001B6
CargandoInicio                    000001A4
CargandoUno                       000001A7
ComenzamosAEmitir                 000001D7
ContadorEmisor                    0000000E
ContadorEnvio                     0000000D
ContadorReceptor                  0000000F
DC                                00000001
DRecibido                         00000205
DatosRecibido                     00000010
Dormir                            00000008
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
ENVIO                             0000000C
Elegir                            000001BC
ElegirEsCero                      000001C5
ElegirFIN                         000001CB
ElegirNoEsCero                    000001BE
Emitir                            000001CC
EmitirFIN                         000001E4
EnviarCero                        000001E0
EnviarUno                         000001DB
F                                 00000001
FSR                               00000004
FinReceptor                       0000021C
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Inicio                            00000000
LCD_2Lineas4Bits5x7               000000DF
LCD_ApuntaCaracter                00000016
LCD_Auxiliar1                     00000014
LCD_Auxiliar2                     00000015
LCD_Borra                         000000DD
LCD_BusDatos                      PORTB
LCD_Byte                          0000010F
LCD_ByteCompleto                  00000116
LCD_Caracter                      000000E2
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   000000EC
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

LCD_CursorIncr                    000000CD
LCD_CursorOFF                     000000DB
LCD_CursorON                      000000D9
LCD_CursorPosicion                00000018
LCD_Dato                          00000011
LCD_DosEspaciosBlancos            00000106
LCD_EnheMayuscula                 000000F3
LCD_EnheMinuscula                 000000ED
LCD_Envia                         000000E4
LCD_EnviaBlancos                  00000109
LCD_EnviaByteLetra                00000122
LCD_EnviaComando                  000000E0
LCD_EnviaOtroBlanco               0000010A
LCD_EsFinalLinea                  0000013D
LCD_EscribeLCD                    000000B9
LCD_FinCGROM                      00000100
LCD_FinMensaje                    00000132
LCD_FinMovimiento                 0000014C
LCD_FinVisualizaDigito            00000124
LCD_Grado                         000000FA
LCD_GuardaDato                    00000012
LCD_GuardaTRISB                   00000013
LCD_Inicializa                    000000A1
LCD_Linea1                        000000CF
LCD_Linea2                        000000D1
LCD_LineaEnBlanco                 00000102
LCD_Mensaje                       00000125
LCD_MensajeMovimiento             00000133
LCD_Nibble                        0000011A
LCD_NoEsFinalLinea                00000142
LCD_NoUltimoCaracter              0000012F
LCD_NoUltimoCaracter2             00000148
LCD_OFF                           000000D7
LCD_PinEnable                     PORTA,2
LCD_PinRS                         PORTA,0
LCD_PinRW                         PORTA,1
LCD_PosicionLinea1                000000D3
LCD_PosicionLinea2                000000D5
LCD_PrimeraPosicion               00000137
LCD_TresEspaciosBlancos           00000108
LCD_UnEspacioBlanco               00000104
LCD_ValorCaracter                 00000017
LCD_VisualizaAlto                 00000117
LCD_VisualizaBajo                 00000119
LCD_VisualizaCaracter             00000139
LCD_VisualizaOtroCaracter         00000129
MensDatosEnv                      00000070
Mensaje0                          00000032
Mensaje1                          0000003B
MensajeBStop                      00000097
MensajeBienvenida                 00000016
MensajeBitStart                   0000008D
MensajeDatCargado                 00000044
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

MensajeElige                      00000023
MensajeEmitiendo                  00000053
MensajeRecibiendo                 00000061
Mensajes                          00000015
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PintarEnLeds                      00000220
Presentacion                      0000000A
Principal                         00000006
PuertaEnviar                      PORTB,1
PuertaRecibir                     PORTB,0
Pulsador                          PORTA,4
R1Decima_BucleExterno             0000018A
R1Decima_BucleExterno2            00000188
R1Decima_BucleInterno             0000018C
R1ms_BucleExterno                 00000174
R1ms_BucleInterno                 00000176
RB0_0                             0000025A
RB0_1                             00000258
RB0_Continua                      00000254
RB1_0                             00000253
RB1_1                             00000251
RB1_Continua                      0000024D
RB2_0                             0000024C
RB2_1                             0000024A
RB2_Continua                      00000246
RB3_0                             00000245
RB3_1                             00000243
RB3_Continua                      0000023F
RB4_0                             0000023E
RB4_1                             0000023C
RB4_Continua                      00000238
RB5_0                             00000237
RB5_1                             00000235
RB5_Continua                      00000231
RB6_0                             00000230
RB6_1                             0000022E
RB6_Continua                      0000022A
RB7_0                             00000229
RB7_1                             00000227
RBIE                              00000003
RBIF                              00000000
RB_Fin                            0000025B
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

RD                                00000000
RP0                               00000005
RP1                               00000006
R_ContA                           00000019
R_ContB                           0000001A
R_ContC                           0000001B
RecCero                           00000210
RecCorrect                        0000007F
RecUno                            00000208
Recibir                           000001EB
RetardoMicros                     00000160
Retardo_100micros                 0000015A
Retardo_100ms                     00000166
Retardo_10micros                  0000014D
Retardo_10ms                      0000016C
Retardo_10s                       0000017E
Retardo_1Decima                   00000187
Retardo_1ms                       00000172
Retardo_1s                        00000184
Retardo_200micros                 00000157
Retardo_200ms                     00000164
Retardo_20micros                  0000015F
Retardo_20ms                      0000016A
Retardo_20s                       0000017C
Retardo_2ms                       00000170
Retardo_2s                        00000182
Retardo_4micros                   00000153
Retardo_500micros                 00000154
Retardo_500ms                     00000186
Retardo_50micros                  0000015C
Retardo_50ms                      00000168
Retardo_5micros                   00000152
Retardo_5ms                       0000016E
Retardo_5s                        00000180
Retardos_ms                       00000173
Rmicros_Bucle                     00000161
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TRISA                             00000085
TRISB                             00000086
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
MPASM  5.16                     PLANTILLA.ASM   5-30-2008  20:47:14         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001
__DEBUG                           1


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXX---- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   604
Program Memory Words Free:   420


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    10 reported,     0 suppressed

